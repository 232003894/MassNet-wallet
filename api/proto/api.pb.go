// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.proto

/*
Package rpcprotobuf is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	Vin
	ToAddressForTx
	InputsInTx
	ScriptPubKeyResult
	Vout
	TransactionInput
	GetTransactionFeeRequest
	CreateRawTransactionRequest
	CreateRawTransactionAutoRequest
	Auto
	CreateRawTransactionResponse
	GetTransactionFeeResponse
	SignRawTransactionRequest
	SignRawTransactionResponse
	SendRawTransactionRequest
	SendRawTransactionResponse
	PubKeyAndAddress
	CreateAddressRequest
	CreateAddressResponse
	GetBalanceRequest
	AddressAndBalance
	GetBalanceResponse
	GetAllBalanceResponse
	ValidateAddressRequest
	ValidateAddressResponse
	GetUtxoRequest
	Unspent
	AddressToUnspent
	GetUtxoResponse
	TxListReply
	Utxo
	UtxosForAddress
	GetAddressesResponse
	GetTxStatusRequest
	GetTxStatusResponse
	GetUtxoByAmountRequest
	GetUtxoByAmountResponse
	DumpWalletRequest
	DumpWalletResponse
	ImportWalletRequest
	ImportWalletResponse
	GetClientStatusRequest
	GetClientStatusResponse
	Coinbase
	GetRawTransactionRequest
	GetRawTransactionResponse
	TxRawResult
	BlockInfoForTx
*/
package rpcprotobuf

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Vin struct {
	Txid     string   `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout     uint32   `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Sequence uint32   `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Witness  []string `protobuf:"bytes,4,rep,name=witness" json:"witness,omitempty"`
}

func (m *Vin) Reset()                    { *m = Vin{} }
func (m *Vin) String() string            { return proto.CompactTextString(m) }
func (*Vin) ProtoMessage()               {}
func (*Vin) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{0} }

func (m *Vin) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *Vin) GetVout() uint32 {
	if m != nil {
		return m.Vout
	}
	return 0
}

func (m *Vin) GetSequence() uint32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *Vin) GetWitness() []string {
	if m != nil {
		return m.Witness
	}
	return nil
}

type ToAddressForTx struct {
	Address string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Value   float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *ToAddressForTx) Reset()                    { *m = ToAddressForTx{} }
func (m *ToAddressForTx) String() string            { return proto.CompactTextString(m) }
func (*ToAddressForTx) ProtoMessage()               {}
func (*ToAddressForTx) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{1} }

func (m *ToAddressForTx) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ToAddressForTx) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type InputsInTx struct {
	Txid    string  `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Index   uint32  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Address string  `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Value   float64 `protobuf:"fixed64,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *InputsInTx) Reset()                    { *m = InputsInTx{} }
func (m *InputsInTx) String() string            { return proto.CompactTextString(m) }
func (*InputsInTx) ProtoMessage()               {}
func (*InputsInTx) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{2} }

func (m *InputsInTx) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *InputsInTx) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *InputsInTx) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *InputsInTx) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ScriptPubKeyResult struct {
	Asm       string   `protobuf:"bytes,1,opt,name=Asm,proto3" json:"Asm,omitempty"`
	Hex       string   `protobuf:"bytes,2,opt,name=Hex,proto3" json:"Hex,omitempty"`
	ReqSigs   int32    `protobuf:"varint,3,opt,name=ReqSigs,proto3" json:"ReqSigs,omitempty"`
	Type      string   `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
	Addresses []string `protobuf:"bytes,5,rep,name=Addresses" json:"Addresses,omitempty"`
}

func (m *ScriptPubKeyResult) Reset()                    { *m = ScriptPubKeyResult{} }
func (m *ScriptPubKeyResult) String() string            { return proto.CompactTextString(m) }
func (*ScriptPubKeyResult) ProtoMessage()               {}
func (*ScriptPubKeyResult) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{3} }

func (m *ScriptPubKeyResult) GetAsm() string {
	if m != nil {
		return m.Asm
	}
	return ""
}

func (m *ScriptPubKeyResult) GetHex() string {
	if m != nil {
		return m.Hex
	}
	return ""
}

func (m *ScriptPubKeyResult) GetReqSigs() int32 {
	if m != nil {
		return m.ReqSigs
	}
	return 0
}

func (m *ScriptPubKeyResult) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ScriptPubKeyResult) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type Vout struct {
	Value        float64             `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	N            uint32              `protobuf:"varint,2,opt,name=n,proto3" json:"n,omitempty"`
	ScriptPubKey *ScriptPubKeyResult `protobuf:"bytes,3,opt,name=ScriptPubKey" json:"ScriptPubKey,omitempty"`
}

func (m *Vout) Reset()                    { *m = Vout{} }
func (m *Vout) String() string            { return proto.CompactTextString(m) }
func (*Vout) ProtoMessage()               {}
func (*Vout) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{4} }

func (m *Vout) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Vout) GetN() uint32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *Vout) GetScriptPubKey() *ScriptPubKeyResult {
	if m != nil {
		return m.ScriptPubKey
	}
	return nil
}

type TransactionInput struct {
	TxId string `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
	Vout uint32 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
}

func (m *TransactionInput) Reset()                    { *m = TransactionInput{} }
func (m *TransactionInput) String() string            { return proto.CompactTextString(m) }
func (*TransactionInput) ProtoMessage()               {}
func (*TransactionInput) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{5} }

func (m *TransactionInput) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *TransactionInput) GetVout() uint32 {
	if m != nil {
		return m.Vout
	}
	return 0
}

type GetTransactionFeeRequest struct {
	Amounts  map[string]float64 `protobuf:"bytes,1,rep,name=amounts" json:"amounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	LockTime int64              `protobuf:"varint,2,opt,name=lockTime,proto3" json:"lockTime,omitempty"`
}

func (m *GetTransactionFeeRequest) Reset()                    { *m = GetTransactionFeeRequest{} }
func (m *GetTransactionFeeRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTransactionFeeRequest) ProtoMessage()               {}
func (*GetTransactionFeeRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{6} }

func (m *GetTransactionFeeRequest) GetAmounts() map[string]float64 {
	if m != nil {
		return m.Amounts
	}
	return nil
}

func (m *GetTransactionFeeRequest) GetLockTime() int64 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

type CreateRawTransactionRequest struct {
	Inputs   []*TransactionInput `protobuf:"bytes,1,rep,name=inputs" json:"inputs,omitempty"`
	Amounts  map[string]float64  `protobuf:"bytes,2,rep,name=amounts" json:"amounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	LockTime int64               `protobuf:"varint,3,opt,name=lockTime,proto3" json:"lockTime,omitempty"`
}

func (m *CreateRawTransactionRequest) Reset()                    { *m = CreateRawTransactionRequest{} }
func (m *CreateRawTransactionRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRawTransactionRequest) ProtoMessage()               {}
func (*CreateRawTransactionRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{7} }

func (m *CreateRawTransactionRequest) GetInputs() []*TransactionInput {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *CreateRawTransactionRequest) GetAmounts() map[string]float64 {
	if m != nil {
		return m.Amounts
	}
	return nil
}

func (m *CreateRawTransactionRequest) GetLockTime() int64 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

type CreateRawTransactionAutoRequest struct {
	Amounts   map[string]float64 `protobuf:"bytes,1,rep,name=amounts" json:"amounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	LockTime  int64              `protobuf:"varint,2,opt,name=lockTime,proto3" json:"lockTime,omitempty"`
	UserTxFee float64            `protobuf:"fixed64,3,opt,name=userTxFee,proto3" json:"userTxFee,omitempty"`
}

func (m *CreateRawTransactionAutoRequest) Reset()         { *m = CreateRawTransactionAutoRequest{} }
func (m *CreateRawTransactionAutoRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRawTransactionAutoRequest) ProtoMessage()    {}
func (*CreateRawTransactionAutoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{8}
}

func (m *CreateRawTransactionAutoRequest) GetAmounts() map[string]float64 {
	if m != nil {
		return m.Amounts
	}
	return nil
}

func (m *CreateRawTransactionAutoRequest) GetLockTime() int64 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *CreateRawTransactionAutoRequest) GetUserTxFee() float64 {
	if m != nil {
		return m.UserTxFee
	}
	return 0
}

type Auto struct {
	Amounts  map[string]float64 `protobuf:"bytes,2,rep,name=amounts" json:"amounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	LockTime int64              `protobuf:"varint,3,opt,name=lockTime,proto3" json:"lockTime,omitempty"`
}

func (m *Auto) Reset()                    { *m = Auto{} }
func (m *Auto) String() string            { return proto.CompactTextString(m) }
func (*Auto) ProtoMessage()               {}
func (*Auto) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{9} }

func (m *Auto) GetAmounts() map[string]float64 {
	if m != nil {
		return m.Amounts
	}
	return nil
}

func (m *Auto) GetLockTime() int64 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

type CreateRawTransactionResponse struct {
	Hex string `protobuf:"bytes,1,opt,name=hex,proto3" json:"hex,omitempty"`
}

func (m *CreateRawTransactionResponse) Reset()                    { *m = CreateRawTransactionResponse{} }
func (m *CreateRawTransactionResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateRawTransactionResponse) ProtoMessage()               {}
func (*CreateRawTransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{10} }

func (m *CreateRawTransactionResponse) GetHex() string {
	if m != nil {
		return m.Hex
	}
	return ""
}

type GetTransactionFeeResponse struct {
	UserTxFee float64 `protobuf:"fixed64,1,opt,name=userTxFee,proto3" json:"userTxFee,omitempty"`
}

func (m *GetTransactionFeeResponse) Reset()                    { *m = GetTransactionFeeResponse{} }
func (m *GetTransactionFeeResponse) String() string            { return proto.CompactTextString(m) }
func (*GetTransactionFeeResponse) ProtoMessage()               {}
func (*GetTransactionFeeResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{11} }

func (m *GetTransactionFeeResponse) GetUserTxFee() float64 {
	if m != nil {
		return m.UserTxFee
	}
	return 0
}

type SignRawTransactionRequest struct {
	RawTx    string `protobuf:"bytes,1,opt,name=rawTx,proto3" json:"rawTx,omitempty"`
	Flags    string `protobuf:"bytes,2,opt,name=flags,proto3" json:"flags,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (m *SignRawTransactionRequest) Reset()                    { *m = SignRawTransactionRequest{} }
func (m *SignRawTransactionRequest) String() string            { return proto.CompactTextString(m) }
func (*SignRawTransactionRequest) ProtoMessage()               {}
func (*SignRawTransactionRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{12} }

func (m *SignRawTransactionRequest) GetRawTx() string {
	if m != nil {
		return m.RawTx
	}
	return ""
}

func (m *SignRawTransactionRequest) GetFlags() string {
	if m != nil {
		return m.Flags
	}
	return ""
}

func (m *SignRawTransactionRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type SignRawTransactionResponse struct {
	Hex      string `protobuf:"bytes,1,opt,name=hex,proto3" json:"hex,omitempty"`
	Complete bool   `protobuf:"varint,2,opt,name=complete,proto3" json:"complete,omitempty"`
}

func (m *SignRawTransactionResponse) Reset()                    { *m = SignRawTransactionResponse{} }
func (m *SignRawTransactionResponse) String() string            { return proto.CompactTextString(m) }
func (*SignRawTransactionResponse) ProtoMessage()               {}
func (*SignRawTransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{13} }

func (m *SignRawTransactionResponse) GetHex() string {
	if m != nil {
		return m.Hex
	}
	return ""
}

func (m *SignRawTransactionResponse) GetComplete() bool {
	if m != nil {
		return m.Complete
	}
	return false
}

type SendRawTransactionRequest struct {
	HexTx         string `protobuf:"bytes,1,opt,name=hexTx,proto3" json:"hexTx,omitempty"`
	AllowHighFees bool   `protobuf:"varint,2,opt,name=allowHighFees,proto3" json:"allowHighFees,omitempty"`
}

func (m *SendRawTransactionRequest) Reset()                    { *m = SendRawTransactionRequest{} }
func (m *SendRawTransactionRequest) String() string            { return proto.CompactTextString(m) }
func (*SendRawTransactionRequest) ProtoMessage()               {}
func (*SendRawTransactionRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{14} }

func (m *SendRawTransactionRequest) GetHexTx() string {
	if m != nil {
		return m.HexTx
	}
	return ""
}

func (m *SendRawTransactionRequest) GetAllowHighFees() bool {
	if m != nil {
		return m.AllowHighFees
	}
	return false
}

type SendRawTransactionResponse struct {
	Hex string `protobuf:"bytes,1,opt,name=hex,proto3" json:"hex,omitempty"`
}

func (m *SendRawTransactionResponse) Reset()                    { *m = SendRawTransactionResponse{} }
func (m *SendRawTransactionResponse) String() string            { return proto.CompactTextString(m) }
func (*SendRawTransactionResponse) ProtoMessage()               {}
func (*SendRawTransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{15} }

func (m *SendRawTransactionResponse) GetHex() string {
	if m != nil {
		return m.Hex
	}
	return ""
}

type PubKeyAndAddress struct {
	PubKey  string `protobuf:"bytes,1,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *PubKeyAndAddress) Reset()                    { *m = PubKeyAndAddress{} }
func (m *PubKeyAndAddress) String() string            { return proto.CompactTextString(m) }
func (*PubKeyAndAddress) ProtoMessage()               {}
func (*PubKeyAndAddress) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{16} }

func (m *PubKeyAndAddress) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *PubKeyAndAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type CreateAddressRequest struct {
	SignRequire  int32 `protobuf:"varint,1,opt,name=signRequire,proto3" json:"signRequire,omitempty"`
	PubKeyNumber int32 `protobuf:"varint,2,opt,name=pubKeyNumber,proto3" json:"pubKeyNumber,omitempty"`
	Version      int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (m *CreateAddressRequest) Reset()                    { *m = CreateAddressRequest{} }
func (m *CreateAddressRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAddressRequest) ProtoMessage()               {}
func (*CreateAddressRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{17} }

func (m *CreateAddressRequest) GetSignRequire() int32 {
	if m != nil {
		return m.SignRequire
	}
	return 0
}

func (m *CreateAddressRequest) GetPubKeyNumber() int32 {
	if m != nil {
		return m.PubKeyNumber
	}
	return 0
}

func (m *CreateAddressRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type CreateAddressResponse struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *CreateAddressResponse) Reset()                    { *m = CreateAddressResponse{} }
func (m *CreateAddressResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAddressResponse) ProtoMessage()               {}
func (*CreateAddressResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{18} }

func (m *CreateAddressResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type GetBalanceRequest struct {
	Addresses []string `protobuf:"bytes,1,rep,name=addresses" json:"addresses,omitempty"`
}

func (m *GetBalanceRequest) Reset()                    { *m = GetBalanceRequest{} }
func (m *GetBalanceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBalanceRequest) ProtoMessage()               {}
func (*GetBalanceRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{19} }

func (m *GetBalanceRequest) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type AddressAndBalance struct {
	Address string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance float64 `protobuf:"fixed64,2,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (m *AddressAndBalance) Reset()                    { *m = AddressAndBalance{} }
func (m *AddressAndBalance) String() string            { return proto.CompactTextString(m) }
func (*AddressAndBalance) ProtoMessage()               {}
func (*AddressAndBalance) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{20} }

func (m *AddressAndBalance) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressAndBalance) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type GetBalanceResponse struct {
	Balance []*AddressAndBalance `protobuf:"bytes,1,rep,name=balance" json:"balance,omitempty"`
}

func (m *GetBalanceResponse) Reset()                    { *m = GetBalanceResponse{} }
func (m *GetBalanceResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBalanceResponse) ProtoMessage()               {}
func (*GetBalanceResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{21} }

func (m *GetBalanceResponse) GetBalance() []*AddressAndBalance {
	if m != nil {
		return m.Balance
	}
	return nil
}

type GetAllBalanceResponse struct {
	Balance float64 `protobuf:"fixed64,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (m *GetAllBalanceResponse) Reset()                    { *m = GetAllBalanceResponse{} }
func (m *GetAllBalanceResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAllBalanceResponse) ProtoMessage()               {}
func (*GetAllBalanceResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{22} }

func (m *GetAllBalanceResponse) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type ValidateAddressRequest struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *ValidateAddressRequest) Reset()                    { *m = ValidateAddressRequest{} }
func (m *ValidateAddressRequest) String() string            { return proto.CompactTextString(m) }
func (*ValidateAddressRequest) ProtoMessage()               {}
func (*ValidateAddressRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{23} }

func (m *ValidateAddressRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ValidateAddressResponse struct {
	IsValid bool   `protobuf:"varint,1,opt,name=isValid,proto3" json:"isValid,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *ValidateAddressResponse) Reset()                    { *m = ValidateAddressResponse{} }
func (m *ValidateAddressResponse) String() string            { return proto.CompactTextString(m) }
func (*ValidateAddressResponse) ProtoMessage()               {}
func (*ValidateAddressResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{24} }

func (m *ValidateAddressResponse) GetIsValid() bool {
	if m != nil {
		return m.IsValid
	}
	return false
}

func (m *ValidateAddressResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type GetUtxoRequest struct {
	Addresses []string `protobuf:"bytes,1,rep,name=addresses" json:"addresses,omitempty"`
}

func (m *GetUtxoRequest) Reset()                    { *m = GetUtxoRequest{} }
func (m *GetUtxoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUtxoRequest) ProtoMessage()               {}
func (*GetUtxoRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{25} }

func (m *GetUtxoRequest) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type Unspent struct {
	TxId   string  `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
	Vout   uint32  `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Amount float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (m *Unspent) Reset()                    { *m = Unspent{} }
func (m *Unspent) String() string            { return proto.CompactTextString(m) }
func (*Unspent) ProtoMessage()               {}
func (*Unspent) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{26} }

func (m *Unspent) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *Unspent) GetVout() uint32 {
	if m != nil {
		return m.Vout
	}
	return 0
}

func (m *Unspent) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type AddressToUnspent struct {
	Address  string     `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Unspents []*Unspent `protobuf:"bytes,2,rep,name=unspents" json:"unspents,omitempty"`
}

func (m *AddressToUnspent) Reset()                    { *m = AddressToUnspent{} }
func (m *AddressToUnspent) String() string            { return proto.CompactTextString(m) }
func (*AddressToUnspent) ProtoMessage()               {}
func (*AddressToUnspent) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{27} }

func (m *AddressToUnspent) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddressToUnspent) GetUnspents() []*Unspent {
	if m != nil {
		return m.Unspents
	}
	return nil
}

type GetUtxoResponse struct {
	AddressToUtxo []*AddressToUnspent `protobuf:"bytes,1,rep,name=addressToUtxo" json:"addressToUtxo,omitempty"`
}

func (m *GetUtxoResponse) Reset()                    { *m = GetUtxoResponse{} }
func (m *GetUtxoResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUtxoResponse) ProtoMessage()               {}
func (*GetUtxoResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{28} }

func (m *GetUtxoResponse) GetAddressToUtxo() []*AddressToUnspent {
	if m != nil {
		return m.AddressToUtxo
	}
	return nil
}

type TxListReply struct {
	Sha     string `protobuf:"bytes,1,opt,name=sha,proto3" json:"sha,omitempty"`
	BlkSha  string `protobuf:"bytes,2,opt,name=blkSha,proto3" json:"blkSha,omitempty"`
	Height  int32  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	TxSpent []bool `protobuf:"varint,4,rep,packed,name=txSpent" json:"txSpent,omitempty"`
}

func (m *TxListReply) Reset()                    { *m = TxListReply{} }
func (m *TxListReply) String() string            { return proto.CompactTextString(m) }
func (*TxListReply) ProtoMessage()               {}
func (*TxListReply) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{29} }

func (m *TxListReply) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

func (m *TxListReply) GetBlkSha() string {
	if m != nil {
		return m.BlkSha
	}
	return ""
}

func (m *TxListReply) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *TxListReply) GetTxSpent() []bool {
	if m != nil {
		return m.TxSpent
	}
	return nil
}

type Utxo struct {
	Tx       string  `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	Height   int32   `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Coinbase bool    `protobuf:"varint,3,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	Index    uint32  `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
	Value    float64 `protobuf:"fixed64,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Utxo) Reset()                    { *m = Utxo{} }
func (m *Utxo) String() string            { return proto.CompactTextString(m) }
func (*Utxo) ProtoMessage()               {}
func (*Utxo) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{30} }

func (m *Utxo) GetTx() string {
	if m != nil {
		return m.Tx
	}
	return ""
}

func (m *Utxo) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Utxo) GetCoinbase() bool {
	if m != nil {
		return m.Coinbase
	}
	return false
}

func (m *Utxo) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Utxo) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type UtxosForAddress struct {
	Address string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Utxos   []*Utxo `protobuf:"bytes,2,rep,name=utxos" json:"utxos,omitempty"`
}

func (m *UtxosForAddress) Reset()                    { *m = UtxosForAddress{} }
func (m *UtxosForAddress) String() string            { return proto.CompactTextString(m) }
func (*UtxosForAddress) ProtoMessage()               {}
func (*UtxosForAddress) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{31} }

func (m *UtxosForAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *UtxosForAddress) GetUtxos() []*Utxo {
	if m != nil {
		return m.Utxos
	}
	return nil
}

type GetAddressesResponse struct {
	AddressList []*AddressAndBalance `protobuf:"bytes,1,rep,name=addressList" json:"addressList,omitempty"`
}

func (m *GetAddressesResponse) Reset()                    { *m = GetAddressesResponse{} }
func (m *GetAddressesResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAddressesResponse) ProtoMessage()               {}
func (*GetAddressesResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{32} }

func (m *GetAddressesResponse) GetAddressList() []*AddressAndBalance {
	if m != nil {
		return m.AddressList
	}
	return nil
}

type GetTxStatusRequest struct {
	TxId string `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
}

func (m *GetTxStatusRequest) Reset()                    { *m = GetTxStatusRequest{} }
func (m *GetTxStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTxStatusRequest) ProtoMessage()               {}
func (*GetTxStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{33} }

func (m *GetTxStatusRequest) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

type GetTxStatusResponse struct {
	Code   string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *GetTxStatusResponse) Reset()                    { *m = GetTxStatusResponse{} }
func (m *GetTxStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*GetTxStatusResponse) ProtoMessage()               {}
func (*GetTxStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{34} }

func (m *GetTxStatusResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *GetTxStatusResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type GetUtxoByAmountRequest struct {
	Amount float64 `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (m *GetUtxoByAmountRequest) Reset()                    { *m = GetUtxoByAmountRequest{} }
func (m *GetUtxoByAmountRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUtxoByAmountRequest) ProtoMessage()               {}
func (*GetUtxoByAmountRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{35} }

func (m *GetUtxoByAmountRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type GetUtxoByAmountResponse struct {
	Utxo []*Unspent `protobuf:"bytes,1,rep,name=utxo" json:"utxo,omitempty"`
}

func (m *GetUtxoByAmountResponse) Reset()                    { *m = GetUtxoByAmountResponse{} }
func (m *GetUtxoByAmountResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUtxoByAmountResponse) ProtoMessage()               {}
func (*GetUtxoByAmountResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{36} }

func (m *GetUtxoByAmountResponse) GetUtxo() []*Unspent {
	if m != nil {
		return m.Utxo
	}
	return nil
}

type DumpWalletRequest struct {
	DumpDirPath string `protobuf:"bytes,1,opt,name=dumpDirPath,proto3" json:"dumpDirPath,omitempty"`
}

func (m *DumpWalletRequest) Reset()                    { *m = DumpWalletRequest{} }
func (m *DumpWalletRequest) String() string            { return proto.CompactTextString(m) }
func (*DumpWalletRequest) ProtoMessage()               {}
func (*DumpWalletRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{37} }

func (m *DumpWalletRequest) GetDumpDirPath() string {
	if m != nil {
		return m.DumpDirPath
	}
	return ""
}

type DumpWalletResponse struct {
}

func (m *DumpWalletResponse) Reset()                    { *m = DumpWalletResponse{} }
func (m *DumpWalletResponse) String() string            { return proto.CompactTextString(m) }
func (*DumpWalletResponse) ProtoMessage()               {}
func (*DumpWalletResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{38} }

type ImportWalletRequest struct {
	ImportDirPath string `protobuf:"bytes,1,opt,name=importDirPath,proto3" json:"importDirPath,omitempty"`
	OldPassword   string `protobuf:"bytes,2,opt,name=oldPassword,proto3" json:"oldPassword,omitempty"`
	NewPassword   string `protobuf:"bytes,3,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
}

func (m *ImportWalletRequest) Reset()                    { *m = ImportWalletRequest{} }
func (m *ImportWalletRequest) String() string            { return proto.CompactTextString(m) }
func (*ImportWalletRequest) ProtoMessage()               {}
func (*ImportWalletRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{39} }

func (m *ImportWalletRequest) GetImportDirPath() string {
	if m != nil {
		return m.ImportDirPath
	}
	return ""
}

func (m *ImportWalletRequest) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

func (m *ImportWalletRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

type ImportWalletResponse struct {
}

func (m *ImportWalletResponse) Reset()                    { *m = ImportWalletResponse{} }
func (m *ImportWalletResponse) String() string            { return proto.CompactTextString(m) }
func (*ImportWalletResponse) ProtoMessage()               {}
func (*ImportWalletResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{40} }

type GetClientStatusRequest struct {
}

func (m *GetClientStatusRequest) Reset()                    { *m = GetClientStatusRequest{} }
func (m *GetClientStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*GetClientStatusRequest) ProtoMessage()               {}
func (*GetClientStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{41} }

type GetClientStatusResponse struct {
	PeerListening   bool                                  `protobuf:"varint,1,opt,name=peerListening,proto3" json:"peerListening,omitempty"`
	Syncing         bool                                  `protobuf:"varint,2,opt,name=syncing,proto3" json:"syncing,omitempty"`
	ChainID         string                                `protobuf:"bytes,3,opt,name=chainID,proto3" json:"chainID,omitempty"`
	LocalBestHeight uint64                                `protobuf:"varint,4,opt,name=localBestHeight,proto3" json:"localBestHeight,omitempty"`
	KnownBestHeight uint64                                `protobuf:"varint,5,opt,name=knownBestHeight,proto3" json:"knownBestHeight,omitempty"`
	PeerCount       *GetClientStatusResponsePeerCountInfo `protobuf:"bytes,6,opt,name=peerCount" json:"peerCount,omitempty"`
	Peers           *GetClientStatusResponsePeerList      `protobuf:"bytes,7,opt,name=peers" json:"peers,omitempty"`
}

func (m *GetClientStatusResponse) Reset()                    { *m = GetClientStatusResponse{} }
func (m *GetClientStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*GetClientStatusResponse) ProtoMessage()               {}
func (*GetClientStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{42} }

func (m *GetClientStatusResponse) GetPeerListening() bool {
	if m != nil {
		return m.PeerListening
	}
	return false
}

func (m *GetClientStatusResponse) GetSyncing() bool {
	if m != nil {
		return m.Syncing
	}
	return false
}

func (m *GetClientStatusResponse) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *GetClientStatusResponse) GetLocalBestHeight() uint64 {
	if m != nil {
		return m.LocalBestHeight
	}
	return 0
}

func (m *GetClientStatusResponse) GetKnownBestHeight() uint64 {
	if m != nil {
		return m.KnownBestHeight
	}
	return 0
}

func (m *GetClientStatusResponse) GetPeerCount() *GetClientStatusResponsePeerCountInfo {
	if m != nil {
		return m.PeerCount
	}
	return nil
}

func (m *GetClientStatusResponse) GetPeers() *GetClientStatusResponsePeerList {
	if m != nil {
		return m.Peers
	}
	return nil
}

type GetClientStatusResponsePeerCountInfo struct {
	Total    uint32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Outbound uint32 `protobuf:"varint,2,opt,name=outbound,proto3" json:"outbound,omitempty"`
	Inbound  uint32 `protobuf:"varint,3,opt,name=inbound,proto3" json:"inbound,omitempty"`
}

func (m *GetClientStatusResponsePeerCountInfo) Reset()         { *m = GetClientStatusResponsePeerCountInfo{} }
func (m *GetClientStatusResponsePeerCountInfo) String() string { return proto.CompactTextString(m) }
func (*GetClientStatusResponsePeerCountInfo) ProtoMessage()    {}
func (*GetClientStatusResponsePeerCountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{42, 0}
}

func (m *GetClientStatusResponsePeerCountInfo) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *GetClientStatusResponsePeerCountInfo) GetOutbound() uint32 {
	if m != nil {
		return m.Outbound
	}
	return 0
}

func (m *GetClientStatusResponsePeerCountInfo) GetInbound() uint32 {
	if m != nil {
		return m.Inbound
	}
	return 0
}

type GetClientStatusResponsePeerInfo struct {
	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Direction string `protobuf:"bytes,3,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (m *GetClientStatusResponsePeerInfo) Reset()         { *m = GetClientStatusResponsePeerInfo{} }
func (m *GetClientStatusResponsePeerInfo) String() string { return proto.CompactTextString(m) }
func (*GetClientStatusResponsePeerInfo) ProtoMessage()    {}
func (*GetClientStatusResponsePeerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{42, 1}
}

func (m *GetClientStatusResponsePeerInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetClientStatusResponsePeerInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *GetClientStatusResponsePeerInfo) GetDirection() string {
	if m != nil {
		return m.Direction
	}
	return ""
}

type GetClientStatusResponsePeerList struct {
	Outbound []*GetClientStatusResponsePeerInfo `protobuf:"bytes,1,rep,name=outbound" json:"outbound,omitempty"`
	Inbound  []*GetClientStatusResponsePeerInfo `protobuf:"bytes,2,rep,name=inbound" json:"inbound,omitempty"`
	Other    []*GetClientStatusResponsePeerInfo `protobuf:"bytes,3,rep,name=other" json:"other,omitempty"`
}

func (m *GetClientStatusResponsePeerList) Reset()         { *m = GetClientStatusResponsePeerList{} }
func (m *GetClientStatusResponsePeerList) String() string { return proto.CompactTextString(m) }
func (*GetClientStatusResponsePeerList) ProtoMessage()    {}
func (*GetClientStatusResponsePeerList) Descriptor() ([]byte, []int) {
	return fileDescriptorApi, []int{42, 2}
}

func (m *GetClientStatusResponsePeerList) GetOutbound() []*GetClientStatusResponsePeerInfo {
	if m != nil {
		return m.Outbound
	}
	return nil
}

func (m *GetClientStatusResponsePeerList) GetInbound() []*GetClientStatusResponsePeerInfo {
	if m != nil {
		return m.Inbound
	}
	return nil
}

func (m *GetClientStatusResponsePeerList) GetOther() []*GetClientStatusResponsePeerInfo {
	if m != nil {
		return m.Other
	}
	return nil
}

//
type Coinbase struct {
	Hex      string            `protobuf:"bytes,1,opt,name=hex,proto3" json:"hex,omitempty"`
	TxHash   string            `protobuf:"bytes,2,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Version  int32             `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	LockTime uint32            `protobuf:"varint,4,opt,name=lockTime,proto3" json:"lockTime,omitempty"`
	To       []*ToAddressForTx `protobuf:"bytes,5,rep,name=to" json:"to,omitempty"`
}

func (m *Coinbase) Reset()                    { *m = Coinbase{} }
func (m *Coinbase) String() string            { return proto.CompactTextString(m) }
func (*Coinbase) ProtoMessage()               {}
func (*Coinbase) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{43} }

func (m *Coinbase) GetHex() string {
	if m != nil {
		return m.Hex
	}
	return ""
}

func (m *Coinbase) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *Coinbase) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Coinbase) GetLockTime() uint32 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *Coinbase) GetTo() []*ToAddressForTx {
	if m != nil {
		return m.To
	}
	return nil
}

type GetRawTransactionRequest struct {
	TxId    string `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
	Verbose bool   `protobuf:"varint,2,opt,name=verbose,proto3" json:"verbose,omitempty"`
}

func (m *GetRawTransactionRequest) Reset()                    { *m = GetRawTransactionRequest{} }
func (m *GetRawTransactionRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRawTransactionRequest) ProtoMessage()               {}
func (*GetRawTransactionRequest) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{44} }

func (m *GetRawTransactionRequest) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *GetRawTransactionRequest) GetVerbose() bool {
	if m != nil {
		return m.Verbose
	}
	return false
}

type GetRawTransactionResponse struct {
	MtxHex string       `protobuf:"bytes,1,opt,name=mtxHex,proto3" json:"mtxHex,omitempty"`
	RawTxn *TxRawResult `protobuf:"bytes,2,opt,name=rawTxn" json:"rawTxn,omitempty"`
}

func (m *GetRawTransactionResponse) Reset()                    { *m = GetRawTransactionResponse{} }
func (m *GetRawTransactionResponse) String() string            { return proto.CompactTextString(m) }
func (*GetRawTransactionResponse) ProtoMessage()               {}
func (*GetRawTransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{45} }

func (m *GetRawTransactionResponse) GetMtxHex() string {
	if m != nil {
		return m.MtxHex
	}
	return ""
}

func (m *GetRawTransactionResponse) GetRawTxn() *TxRawResult {
	if m != nil {
		return m.RawTxn
	}
	return nil
}

type TxRawResult struct {
	Hex           string            `protobuf:"bytes,1,opt,name=hex,proto3" json:"hex,omitempty"`
	Txid          string            `protobuf:"bytes,2,opt,name=txid,proto3" json:"txid,omitempty"`
	Version       int32             `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	LockTime      uint32            `protobuf:"varint,4,opt,name=lockTime,proto3" json:"lockTime,omitempty"`
	Block         *BlockInfoForTx   `protobuf:"bytes,5,opt,name=block" json:"block,omitempty"`
	Vin           []*Vin            `protobuf:"bytes,6,rep,name=vin" json:"vin,omitempty"`
	Vout          []*Vout           `protobuf:"bytes,7,rep,name=vout" json:"vout,omitempty"`
	FromAddress   []string          `protobuf:"bytes,8,rep,name=fromAddress" json:"fromAddress,omitempty"`
	To            []*ToAddressForTx `protobuf:"bytes,9,rep,name=to" json:"to,omitempty"`
	Inputs        []*InputsInTx     `protobuf:"bytes,10,rep,name=inputs" json:"inputs,omitempty"`
	Payload       string            `protobuf:"bytes,11,opt,name=payload,proto3" json:"payload,omitempty"`
	Confirmations uint64            `protobuf:"varint,12,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	Size         int32             `protobuf:"varint,13,opt,name=size,proto3" json:"size,omitempty"`
	Fee           float64           `protobuf:"fixed64,14,opt,name=fee,proto3" json:"fee,omitempty"`
	Status        int32             `protobuf:"varint,15,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *TxRawResult) Reset()                    { *m = TxRawResult{} }
func (m *TxRawResult) String() string            { return proto.CompactTextString(m) }
func (*TxRawResult) ProtoMessage()               {}
func (*TxRawResult) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{46} }

func (m *TxRawResult) GetHex() string {
	if m != nil {
		return m.Hex
	}
	return ""
}

func (m *TxRawResult) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *TxRawResult) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *TxRawResult) GetLockTime() uint32 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *TxRawResult) GetBlock() *BlockInfoForTx {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *TxRawResult) GetVin() []*Vin {
	if m != nil {
		return m.Vin
	}
	return nil
}

func (m *TxRawResult) GetVout() []*Vout {
	if m != nil {
		return m.Vout
	}
	return nil
}

func (m *TxRawResult) GetFromAddress() []string {
	if m != nil {
		return m.FromAddress
	}
	return nil
}

func (m *TxRawResult) GetTo() []*ToAddressForTx {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *TxRawResult) GetInputs() []*InputsInTx {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *TxRawResult) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *TxRawResult) GetConfirmations() uint64 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *TxRawResult) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *TxRawResult) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *TxRawResult) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type BlockInfoForTx struct {
	Height    uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	BlockHash string `protobuf:"bytes,2,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (m *BlockInfoForTx) Reset()                    { *m = BlockInfoForTx{} }
func (m *BlockInfoForTx) String() string            { return proto.CompactTextString(m) }
func (*BlockInfoForTx) ProtoMessage()               {}
func (*BlockInfoForTx) Descriptor() ([]byte, []int) { return fileDescriptorApi, []int{47} }

func (m *BlockInfoForTx) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockInfoForTx) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *BlockInfoForTx) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*Vin)(nil), "rpcprotobuf.Vin")
	proto.RegisterType((*ToAddressForTx)(nil), "rpcprotobuf.ToAddressForTx")
	proto.RegisterType((*InputsInTx)(nil), "rpcprotobuf.InputsInTx")
	proto.RegisterType((*ScriptPubKeyResult)(nil), "rpcprotobuf.ScriptPubKeyResult")
	proto.RegisterType((*Vout)(nil), "rpcprotobuf.Vout")
	proto.RegisterType((*TransactionInput)(nil), "rpcprotobuf.TransactionInput")
	proto.RegisterType((*GetTransactionFeeRequest)(nil), "rpcprotobuf.GetTransactionFeeRequest")
	proto.RegisterType((*CreateRawTransactionRequest)(nil), "rpcprotobuf.CreateRawTransactionRequest")
	proto.RegisterType((*CreateRawTransactionAutoRequest)(nil), "rpcprotobuf.CreateRawTransactionAutoRequest")
	proto.RegisterType((*Auto)(nil), "rpcprotobuf.auto")
	proto.RegisterType((*CreateRawTransactionResponse)(nil), "rpcprotobuf.CreateRawTransactionResponse")
	proto.RegisterType((*GetTransactionFeeResponse)(nil), "rpcprotobuf.GetTransactionFeeResponse")
	proto.RegisterType((*SignRawTransactionRequest)(nil), "rpcprotobuf.SignRawTransactionRequest")
	proto.RegisterType((*SignRawTransactionResponse)(nil), "rpcprotobuf.SignRawTransactionResponse")
	proto.RegisterType((*SendRawTransactionRequest)(nil), "rpcprotobuf.SendRawTransactionRequest")
	proto.RegisterType((*SendRawTransactionResponse)(nil), "rpcprotobuf.SendRawTransactionResponse")
	proto.RegisterType((*PubKeyAndAddress)(nil), "rpcprotobuf.PubKeyAndAddress")
	proto.RegisterType((*CreateAddressRequest)(nil), "rpcprotobuf.CreateAddressRequest")
	proto.RegisterType((*CreateAddressResponse)(nil), "rpcprotobuf.CreateAddressResponse")
	proto.RegisterType((*GetBalanceRequest)(nil), "rpcprotobuf.GetBalanceRequest")
	proto.RegisterType((*AddressAndBalance)(nil), "rpcprotobuf.AddressAndBalance")
	proto.RegisterType((*GetBalanceResponse)(nil), "rpcprotobuf.GetBalanceResponse")
	proto.RegisterType((*GetAllBalanceResponse)(nil), "rpcprotobuf.GetAllBalanceResponse")
	proto.RegisterType((*ValidateAddressRequest)(nil), "rpcprotobuf.ValidateAddressRequest")
	proto.RegisterType((*ValidateAddressResponse)(nil), "rpcprotobuf.ValidateAddressResponse")
	proto.RegisterType((*GetUtxoRequest)(nil), "rpcprotobuf.GetUtxoRequest")
	proto.RegisterType((*Unspent)(nil), "rpcprotobuf.Unspent")
	proto.RegisterType((*AddressToUnspent)(nil), "rpcprotobuf.AddressToUnspent")
	proto.RegisterType((*GetUtxoResponse)(nil), "rpcprotobuf.GetUtxoResponse")
	proto.RegisterType((*TxListReply)(nil), "rpcprotobuf.TxListReply")
	proto.RegisterType((*Utxo)(nil), "rpcprotobuf.Utxo")
	proto.RegisterType((*UtxosForAddress)(nil), "rpcprotobuf.UtxosForAddress")
	proto.RegisterType((*GetAddressesResponse)(nil), "rpcprotobuf.GetAddressesResponse")
	proto.RegisterType((*GetTxStatusRequest)(nil), "rpcprotobuf.GetTxStatusRequest")
	proto.RegisterType((*GetTxStatusResponse)(nil), "rpcprotobuf.GetTxStatusResponse")
	proto.RegisterType((*GetUtxoByAmountRequest)(nil), "rpcprotobuf.GetUtxoByAmountRequest")
	proto.RegisterType((*GetUtxoByAmountResponse)(nil), "rpcprotobuf.GetUtxoByAmountResponse")
	proto.RegisterType((*DumpWalletRequest)(nil), "rpcprotobuf.DumpWalletRequest")
	proto.RegisterType((*DumpWalletResponse)(nil), "rpcprotobuf.DumpWalletResponse")
	proto.RegisterType((*ImportWalletRequest)(nil), "rpcprotobuf.ImportWalletRequest")
	proto.RegisterType((*ImportWalletResponse)(nil), "rpcprotobuf.ImportWalletResponse")
	proto.RegisterType((*GetClientStatusRequest)(nil), "rpcprotobuf.GetClientStatusRequest")
	proto.RegisterType((*GetClientStatusResponse)(nil), "rpcprotobuf.GetClientStatusResponse")
	proto.RegisterType((*GetClientStatusResponsePeerCountInfo)(nil), "rpcprotobuf.GetClientStatusResponse.peerCountInfo")
	proto.RegisterType((*GetClientStatusResponsePeerInfo)(nil), "rpcprotobuf.GetClientStatusResponse.peerInfo")
	proto.RegisterType((*GetClientStatusResponsePeerList)(nil), "rpcprotobuf.GetClientStatusResponse.peerList")
	proto.RegisterType((*Coinbase)(nil), "rpcprotobuf.Coinbase")
	proto.RegisterType((*GetRawTransactionRequest)(nil), "rpcprotobuf.GetRawTransactionRequest")
	proto.RegisterType((*GetRawTransactionResponse)(nil), "rpcprotobuf.GetRawTransactionResponse")
	proto.RegisterType((*TxRawResult)(nil), "rpcprotobuf.TxRawResult")
	proto.RegisterType((*BlockInfoForTx)(nil), "rpcprotobuf.BlockInfoForTx")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ApiService service

type ApiServiceClient interface {
	CreateAddress(ctx context.Context, in *CreateAddressRequest, opts ...grpc.CallOption) (*CreateAddressResponse, error)
	GetAddresses(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*GetAddressesResponse, error)
	GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error)
	GetAllBalance(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*GetAllBalanceResponse, error)
	GetUtxo(ctx context.Context, in *GetUtxoRequest, opts ...grpc.CallOption) (*GetUtxoResponse, error)
	GetAllUtxo(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*GetUtxoResponse, error)
	ValidateAddress(ctx context.Context, in *ValidateAddressRequest, opts ...grpc.CallOption) (*ValidateAddressResponse, error)
	GetUtxoByAmount(ctx context.Context, in *GetUtxoByAmountRequest, opts ...grpc.CallOption) (*GetUtxoByAmountResponse, error)
	CreateRawTransaction(ctx context.Context, in *CreateRawTransactionRequest, opts ...grpc.CallOption) (*CreateRawTransactionResponse, error)
	GetTransactionFee(ctx context.Context, in *GetTransactionFeeRequest, opts ...grpc.CallOption) (*GetTransactionFeeResponse, error)
	AutoCreateTransaction(ctx context.Context, in *CreateRawTransactionAutoRequest, opts ...grpc.CallOption) (*CreateRawTransactionResponse, error)
	SignRawTransaction(ctx context.Context, in *SignRawTransactionRequest, opts ...grpc.CallOption) (*SignRawTransactionResponse, error)
	SendRawTransaction(ctx context.Context, in *SendRawTransactionRequest, opts ...grpc.CallOption) (*SendRawTransactionResponse, error)
	GetRawTransaction(ctx context.Context, in *GetRawTransactionRequest, opts ...grpc.CallOption) (*GetRawTransactionResponse, error)
	GetTxStatus(ctx context.Context, in *GetTxStatusRequest, opts ...grpc.CallOption) (*GetTxStatusResponse, error)
	GetClientStatus(ctx context.Context, in *GetClientStatusRequest, opts ...grpc.CallOption) (*GetClientStatusResponse, error)
}

type apiServiceClient struct {
	cc *grpc.ClientConn
}

func NewApiServiceClient(cc *grpc.ClientConn) ApiServiceClient {
	return &apiServiceClient{cc}
}

func (c *apiServiceClient) CreateAddress(ctx context.Context, in *CreateAddressRequest, opts ...grpc.CallOption) (*CreateAddressResponse, error) {
	out := new(CreateAddressResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/CreateAddress", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetAddresses(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*GetAddressesResponse, error) {
	out := new(GetAddressesResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetAddresses", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error) {
	out := new(GetBalanceResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetBalance", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetAllBalance(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*GetAllBalanceResponse, error) {
	out := new(GetAllBalanceResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetAllBalance", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetUtxo(ctx context.Context, in *GetUtxoRequest, opts ...grpc.CallOption) (*GetUtxoResponse, error) {
	out := new(GetUtxoResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetUtxo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetAllUtxo(ctx context.Context, in *google_protobuf2.Empty, opts ...grpc.CallOption) (*GetUtxoResponse, error) {
	out := new(GetUtxoResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetAllUtxo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ValidateAddress(ctx context.Context, in *ValidateAddressRequest, opts ...grpc.CallOption) (*ValidateAddressResponse, error) {
	out := new(ValidateAddressResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/ValidateAddress", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetUtxoByAmount(ctx context.Context, in *GetUtxoByAmountRequest, opts ...grpc.CallOption) (*GetUtxoByAmountResponse, error) {
	out := new(GetUtxoByAmountResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetUtxoByAmount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) CreateRawTransaction(ctx context.Context, in *CreateRawTransactionRequest, opts ...grpc.CallOption) (*CreateRawTransactionResponse, error) {
	out := new(CreateRawTransactionResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/CreateRawTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTransactionFee(ctx context.Context, in *GetTransactionFeeRequest, opts ...grpc.CallOption) (*GetTransactionFeeResponse, error) {
	out := new(GetTransactionFeeResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetTransactionFee", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) AutoCreateTransaction(ctx context.Context, in *CreateRawTransactionAutoRequest, opts ...grpc.CallOption) (*CreateRawTransactionResponse, error) {
	out := new(CreateRawTransactionResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/AutoCreateTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) SignRawTransaction(ctx context.Context, in *SignRawTransactionRequest, opts ...grpc.CallOption) (*SignRawTransactionResponse, error) {
	out := new(SignRawTransactionResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/SignRawTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) SendRawTransaction(ctx context.Context, in *SendRawTransactionRequest, opts ...grpc.CallOption) (*SendRawTransactionResponse, error) {
	out := new(SendRawTransactionResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/SendRawTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetRawTransaction(ctx context.Context, in *GetRawTransactionRequest, opts ...grpc.CallOption) (*GetRawTransactionResponse, error) {
	out := new(GetRawTransactionResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetRawTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTxStatus(ctx context.Context, in *GetTxStatusRequest, opts ...grpc.CallOption) (*GetTxStatusResponse, error) {
	out := new(GetTxStatusResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetTxStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetClientStatus(ctx context.Context, in *GetClientStatusRequest, opts ...grpc.CallOption) (*GetClientStatusResponse, error) {
	out := new(GetClientStatusResponse)
	err := grpc.Invoke(ctx, "/rpcprotobuf.ApiService/GetClientStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ApiService service

type ApiServiceServer interface {
	CreateAddress(context.Context, *CreateAddressRequest) (*CreateAddressResponse, error)
	GetAddresses(context.Context, *google_protobuf2.Empty) (*GetAddressesResponse, error)
	GetBalance(context.Context, *GetBalanceRequest) (*GetBalanceResponse, error)
	GetAllBalance(context.Context, *google_protobuf2.Empty) (*GetAllBalanceResponse, error)
	GetUtxo(context.Context, *GetUtxoRequest) (*GetUtxoResponse, error)
	GetAllUtxo(context.Context, *google_protobuf2.Empty) (*GetUtxoResponse, error)
	ValidateAddress(context.Context, *ValidateAddressRequest) (*ValidateAddressResponse, error)
	GetUtxoByAmount(context.Context, *GetUtxoByAmountRequest) (*GetUtxoByAmountResponse, error)
	CreateRawTransaction(context.Context, *CreateRawTransactionRequest) (*CreateRawTransactionResponse, error)
	GetTransactionFee(context.Context, *GetTransactionFeeRequest) (*GetTransactionFeeResponse, error)
	AutoCreateTransaction(context.Context, *CreateRawTransactionAutoRequest) (*CreateRawTransactionResponse, error)
	SignRawTransaction(context.Context, *SignRawTransactionRequest) (*SignRawTransactionResponse, error)
	SendRawTransaction(context.Context, *SendRawTransactionRequest) (*SendRawTransactionResponse, error)
	GetRawTransaction(context.Context, *GetRawTransactionRequest) (*GetRawTransactionResponse, error)
	GetTxStatus(context.Context, *GetTxStatusRequest) (*GetTxStatusResponse, error)
	GetClientStatus(context.Context, *GetClientStatusRequest) (*GetClientStatusResponse, error)
}

func RegisterApiServiceServer(s *grpc.Server, srv ApiServiceServer) {
	s.RegisterService(&_ApiService_serviceDesc, srv)
}

func _ApiService_CreateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/CreateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateAddress(ctx, req.(*CreateAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetAddresses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf2.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetAddresses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetAddresses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetAddresses(ctx, req.(*google_protobuf2.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetBalance(ctx, req.(*GetBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetAllBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf2.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetAllBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetAllBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetAllBalance(ctx, req.(*google_protobuf2.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetUtxo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUtxoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetUtxo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetUtxo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetUtxo(ctx, req.(*GetUtxoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetAllUtxo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf2.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetAllUtxo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetAllUtxo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetAllUtxo(ctx, req.(*google_protobuf2.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ValidateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ValidateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/ValidateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ValidateAddress(ctx, req.(*ValidateAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetUtxoByAmount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUtxoByAmountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetUtxoByAmount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetUtxoByAmount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetUtxoByAmount(ctx, req.(*GetUtxoByAmountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_CreateRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).CreateRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/CreateRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).CreateRawTransaction(ctx, req.(*CreateRawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTransactionFee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionFeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTransactionFee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetTransactionFee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTransactionFee(ctx, req.(*GetTransactionFeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_AutoCreateTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRawTransactionAutoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).AutoCreateTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/AutoCreateTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).AutoCreateTransaction(ctx, req.(*CreateRawTransactionAutoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_SignRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignRawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).SignRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/SignRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).SignRawTransaction(ctx, req.(*SignRawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_SendRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendRawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).SendRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/SendRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).SendRawTransaction(ctx, req.(*SendRawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetRawTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRawTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetRawTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetRawTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetRawTransaction(ctx, req.(*GetRawTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTxStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTxStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTxStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetTxStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTxStatus(ctx, req.(*GetTxStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetClientStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClientStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetClientStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcprotobuf.ApiService/GetClientStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetClientStatus(ctx, req.(*GetClientStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcprotobuf.ApiService",
	HandlerType: (*ApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAddress",
			Handler:    _ApiService_CreateAddress_Handler,
		},
		{
			MethodName: "GetAddresses",
			Handler:    _ApiService_GetAddresses_Handler,
		},
		{
			MethodName: "GetBalance",
			Handler:    _ApiService_GetBalance_Handler,
		},
		{
			MethodName: "GetAllBalance",
			Handler:    _ApiService_GetAllBalance_Handler,
		},
		{
			MethodName: "GetUtxo",
			Handler:    _ApiService_GetUtxo_Handler,
		},
		{
			MethodName: "GetAllUtxo",
			Handler:    _ApiService_GetAllUtxo_Handler,
		},
		{
			MethodName: "ValidateAddress",
			Handler:    _ApiService_ValidateAddress_Handler,
		},
		{
			MethodName: "GetUtxoByAmount",
			Handler:    _ApiService_GetUtxoByAmount_Handler,
		},
		{
			MethodName: "CreateRawTransaction",
			Handler:    _ApiService_CreateRawTransaction_Handler,
		},
		{
			MethodName: "GetTransactionFee",
			Handler:    _ApiService_GetTransactionFee_Handler,
		},
		{
			MethodName: "AutoCreateTransaction",
			Handler:    _ApiService_AutoCreateTransaction_Handler,
		},
		{
			MethodName: "SignRawTransaction",
			Handler:    _ApiService_SignRawTransaction_Handler,
		},
		{
			MethodName: "SendRawTransaction",
			Handler:    _ApiService_SendRawTransaction_Handler,
		},
		{
			MethodName: "GetRawTransaction",
			Handler:    _ApiService_GetRawTransaction_Handler,
		},
		{
			MethodName: "GetTxStatus",
			Handler:    _ApiService_GetTxStatus_Handler,
		},
		{
			MethodName: "GetClientStatus",
			Handler:    _ApiService_GetClientStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptorApi) }

var fileDescriptorApi = []byte{
	// 2523 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x59, 0xdd, 0x6f, 0x1c, 0x49,
	0x11, 0xd7, 0xec, 0x7a, 0xfd, 0x51, 0xfe, 0x4c, 0xc7, 0x76, 0xd6, 0x1b, 0x27, 0xde, 0xf4, 0xe5,
	0xee, 0x7c, 0x1f, 0xd9, 0xb5, 0x7d, 0x77, 0xd2, 0x9d, 0x79, 0xc9, 0xc6, 0xb9, 0xd8, 0x86, 0xbb,
	0xc3, 0x1a, 0xef, 0xf9, 0x90, 0x90, 0x80, 0xf1, 0x6c, 0x7b, 0x77, 0x2e, 0xb3, 0xdd, 0x93, 0xe9,
	0x1e, 0x7b, 0x4d, 0x14, 0x21, 0x1d, 0x88, 0x07, 0x78, 0x02, 0x1e, 0x40, 0xf0, 0xcf, 0xf0, 0x27,
	0x20, 0xc1, 0x7f, 0x00, 0xbc, 0xf1, 0x8a, 0x78, 0x42, 0x42, 0xfd, 0x31, 0xb3, 0x33, 0xbb, 0x33,
	0x8e, 0x13, 0x10, 0x4f, 0xde, 0xaa, 0xa9, 0xae, 0x5f, 0x7d, 0x74, 0x57, 0x55, 0xb7, 0x61, 0xc6,
	0x09, 0xbc, 0x46, 0x10, 0x32, 0xc1, 0xd0, 0x6c, 0x18, 0xb8, 0xea, 0xd7, 0x69, 0x74, 0x56, 0x5b,
	0xef, 0x32, 0xd6, 0xf5, 0x49, 0xd3, 0x09, 0xbc, 0xa6, 0x43, 0x29, 0x13, 0x8e, 0xf0, 0x18, 0xe5,
	0x5a, 0xb4, 0xf6, 0xbe, 0xfa, 0xe3, 0x3e, 0xe8, 0x12, 0xfa, 0x80, 0x5f, 0x38, 0xdd, 0x2e, 0x09,
	0x9b, 0x2c, 0x50, 0x12, 0x39, 0xd2, 0xb7, 0x8d, 0xae, 0x58, 0x79, 0x93, 0xf4, 0x03, 0x71, 0xa9,
	0x3f, 0x62, 0x17, 0xca, 0x27, 0x1e, 0x45, 0x08, 0x26, 0xc4, 0xc0, 0xeb, 0x54, 0xad, 0xba, 0xb5,
	0x39, 0x63, 0xab, 0xdf, 0x92, 0x77, 0xce, 0x22, 0x51, 0x2d, 0xd5, 0xad, 0xcd, 0x79, 0x5b, 0xfd,
	0x46, 0x35, 0x98, 0xe6, 0xe4, 0x59, 0x44, 0xa8, 0x4b, 0xaa, 0x65, 0xc5, 0x4f, 0x68, 0x54, 0x85,
	0xa9, 0x0b, 0x4f, 0x50, 0xc2, 0x79, 0x75, 0xa2, 0x5e, 0xde, 0x9c, 0xb1, 0x63, 0x12, 0x3f, 0x84,
	0x85, 0x36, 0x6b, 0x75, 0x3a, 0x21, 0xe1, 0xfc, 0x09, 0x0b, 0xdb, 0x03, 0x29, 0xeb, 0x68, 0xda,
	0x40, 0xc6, 0x24, 0x5a, 0x86, 0xca, 0xb9, 0xe3, 0x47, 0x44, 0xc1, 0x5a, 0xb6, 0x26, 0xf0, 0x19,
	0xc0, 0x21, 0x0d, 0x22, 0xc1, 0x0f, 0x69, 0x7b, 0x90, 0x6b, 0xed, 0x32, 0x54, 0x3c, 0xda, 0x21,
	0x03, 0x63, 0xae, 0x26, 0xd2, 0x38, 0xe5, 0x02, 0x9c, 0x89, 0x34, 0xce, 0xcf, 0x2c, 0x40, 0xc7,
	0x6e, 0xe8, 0x05, 0xe2, 0x28, 0x3a, 0xfd, 0x0e, 0xb9, 0xb4, 0x09, 0x8f, 0x7c, 0x81, 0x96, 0xa0,
	0xdc, 0xe2, 0x7d, 0x83, 0x27, 0x7f, 0x4a, 0xce, 0x81, 0x01, 0x9b, 0xb1, 0xe5, 0x4f, 0x09, 0x65,
	0x93, 0x67, 0xc7, 0x5e, 0x57, 0x43, 0x55, 0xec, 0x98, 0x94, 0xe6, 0xb6, 0x2f, 0x03, 0x8d, 0x34,
	0x63, 0xab, 0xdf, 0x68, 0x1d, 0x66, 0x4c, 0x40, 0x08, 0xaf, 0x56, 0x54, 0xb8, 0x86, 0x0c, 0xcc,
	0x60, 0xe2, 0x44, 0x86, 0x3b, 0x31, 0xd2, 0x4a, 0x19, 0x89, 0xe6, 0xc0, 0xa2, 0xc6, 0x4d, 0x8b,
	0xa2, 0x3d, 0x98, 0x4b, 0x5b, 0xac, 0xc0, 0x67, 0x77, 0x36, 0x1a, 0xa9, 0xed, 0xd4, 0x18, 0x77,
	0xc9, 0xce, 0x2c, 0xc2, 0xbb, 0xb0, 0xd4, 0x0e, 0x1d, 0xca, 0x1d, 0x57, 0xee, 0x1c, 0x15, 0x6a,
	0x1d, 0xe5, 0xc3, 0x54, 0x94, 0x0f, 0x73, 0xf7, 0x04, 0xfe, 0xa3, 0x05, 0xd5, 0x7d, 0x22, 0x52,
	0xeb, 0x9f, 0x10, 0x62, 0xcb, 0x5d, 0xc1, 0x05, 0xfa, 0x0c, 0xa6, 0x9c, 0x3e, 0x8b, 0xa8, 0x90,
	0x89, 0x2e, 0x6f, 0xce, 0xee, 0xec, 0x64, 0x0c, 0x2b, 0x5a, 0xd7, 0x68, 0xe9, 0x45, 0x9f, 0x52,
	0x11, 0x5e, 0xda, 0xb1, 0x0a, 0xb9, 0xfd, 0x7c, 0xe6, 0x3e, 0x6d, 0x7b, 0x7d, 0xbd, 0x3f, 0xca,
	0x76, 0x42, 0xd7, 0x76, 0x61, 0x2e, 0xbd, 0x48, 0x66, 0xe8, 0x29, 0xb9, 0x8c, 0x73, 0xf6, 0x94,
	0x5c, 0xe6, 0x6f, 0xad, 0xdd, 0xd2, 0xc7, 0x16, 0xfe, 0xb7, 0x05, 0xb7, 0xf7, 0x42, 0xe2, 0x08,
	0x62, 0x3b, 0x17, 0x29, 0x83, 0x62, 0x2f, 0x3e, 0x82, 0x49, 0x4f, 0x6d, 0x3f, 0xe3, 0xc4, 0x9d,
	0x8c, 0x13, 0xa3, 0x91, 0xb3, 0x8d, 0x30, 0xfa, 0xee, 0xd0, 0xf9, 0x92, 0x5a, 0xf7, 0x51, 0x66,
	0xdd, 0x15, 0x88, 0xd7, 0xf0, 0xbf, 0xfc, 0x3f, 0xf4, 0xff, 0x1f, 0x16, 0x6c, 0xe4, 0x59, 0xd3,
	0x8a, 0x04, 0x8b, 0x63, 0x70, 0x3c, 0x9a, 0xc9, 0x4f, 0x5e, 0xea, 0x4c, 0x6a, 0xf9, 0xab, 0x27,
	0x54, 0x1e, 0x91, 0x88, 0x93, 0xb0, 0x3d, 0x78, 0x42, 0xb4, 0xb7, 0x96, 0x3d, 0x64, 0xfc, 0x57,
	0xee, 0xfe, 0xce, 0x82, 0x09, 0x27, 0x12, 0x0c, 0x7d, 0x3c, 0x9a, 0xa0, 0xbb, 0x19, 0x9f, 0xa4,
	0xcc, 0xff, 0x39, 0x13, 0x5b, 0xb0, 0x9e, 0xbf, 0x2d, 0x78, 0xc0, 0x28, 0x27, 0x52, 0x57, 0x8f,
	0x0c, 0x62, 0x5d, 0x3d, 0x32, 0xc0, 0x9f, 0xc0, 0x5a, 0xce, 0x29, 0x32, 0xe2, 0x99, 0x18, 0x5a,
	0x23, 0x31, 0xc4, 0x2e, 0xac, 0x1d, 0x7b, 0x5d, 0x9a, 0xbf, 0xe7, 0x97, 0xa1, 0x12, 0x3a, 0x17,
	0xed, 0x18, 0x4b, 0x13, 0x92, 0x7b, 0xe6, 0x3b, 0x5d, 0x6e, 0x2a, 0x9f, 0x26, 0x64, 0x34, 0x02,
	0x87, 0xf3, 0x0b, 0x16, 0x76, 0x4c, 0x9d, 0x4d, 0x68, 0xfc, 0x6d, 0xa8, 0xe5, 0x81, 0x14, 0xf9,
	0x23, 0x75, 0xb9, 0xac, 0x1f, 0xf8, 0x44, 0xe8, 0xf0, 0x4c, 0xdb, 0x09, 0x8d, 0xbf, 0x82, 0xb5,
	0x63, 0x42, 0x3b, 0x85, 0x06, 0xf7, 0xc8, 0x60, 0x68, 0xb0, 0x22, 0xd0, 0x7d, 0x98, 0x77, 0x7c,
	0x9f, 0x5d, 0x1c, 0x78, 0xdd, 0xde, 0x13, 0x42, 0xb8, 0xd1, 0x99, 0x65, 0xe2, 0x06, 0xd4, 0xf2,
	0x14, 0x17, 0x06, 0xfd, 0x31, 0x2c, 0xe9, 0xca, 0xd9, 0xa2, 0x1d, 0x53, 0xb6, 0xd1, 0x2a, 0x4c,
	0x06, 0xba, 0x04, 0x6b, 0x41, 0x43, 0xa5, 0x7b, 0x50, 0x29, 0xd3, 0x83, 0xf0, 0x39, 0x2c, 0xeb,
	0x64, 0x1b, 0x15, 0xb1, 0x27, 0x75, 0x98, 0xe5, 0x32, 0x64, 0xe4, 0x59, 0xe4, 0x85, 0x3a, 0x6f,
	0x15, 0x3b, 0xcd, 0x42, 0x18, 0xe6, 0xb4, 0xf6, 0x2f, 0xa2, 0xfe, 0x29, 0x09, 0x95, 0xe2, 0x8a,
	0x9d, 0xe1, 0x49, 0xdc, 0x73, 0x12, 0x72, 0x8f, 0xd1, 0xb8, 0x21, 0x19, 0x12, 0x6f, 0xc3, 0xca,
	0x08, 0xae, 0x71, 0xb4, 0xb0, 0x2d, 0xe3, 0x6d, 0xb8, 0xb1, 0x4f, 0xc4, 0x23, 0xc7, 0x77, 0xa8,
	0x9b, 0x14, 0xf7, 0x75, 0x98, 0x71, 0x92, 0x26, 0x66, 0xe9, 0x26, 0x96, 0x30, 0xf0, 0x3e, 0xdc,
	0x30, 0xfa, 0x5b, 0xb4, 0x63, 0x56, 0x5e, 0xd1, 0xf8, 0xab, 0x30, 0x75, 0xaa, 0x85, 0xcc, 0xa9,
	0x88, 0x49, 0xfc, 0x05, 0xa0, 0x34, 0xb6, 0xb1, 0xf5, 0xe3, 0xa1, 0xbc, 0x95, 0x73, 0x76, 0xc7,
	0xa0, 0x87, 0xfa, 0xb6, 0x61, 0x65, 0x9f, 0x88, 0x96, 0xef, 0x8f, 0xaa, 0xac, 0xa6, 0x55, 0x66,
	0x4c, 0xd8, 0x81, 0xd5, 0x13, 0xc7, 0xf7, 0x3a, 0xe3, 0xb9, 0x2a, 0x0e, 0xd9, 0xe7, 0x70, 0x6b,
	0x6c, 0xcd, 0x10, 0xc8, 0xe3, 0xea, 0xa3, 0x5a, 0x34, 0x6d, 0xc7, 0xe4, 0x15, 0x9b, 0xa5, 0x01,
	0x0b, 0xfb, 0x44, 0x7c, 0x29, 0x06, 0xec, 0x7a, 0xe1, 0x3f, 0x84, 0xa9, 0x2f, 0x29, 0x0f, 0x08,
	0xbd, 0x76, 0x27, 0x97, 0x3b, 0x58, 0xd7, 0x37, 0x53, 0x6e, 0x0d, 0x85, 0x7f, 0x00, 0x4b, 0xc6,
	0x83, 0x36, 0x8b, 0x75, 0x16, 0x27, 0x72, 0x0b, 0xa6, 0x23, 0x2d, 0x14, 0x57, 0xd5, 0xe5, 0x4c,
	0x66, 0x8c, 0x06, 0x3b, 0x91, 0xc2, 0x27, 0xb0, 0x98, 0xb8, 0x66, 0x22, 0xb4, 0x07, 0xf3, 0x4e,
	0x02, 0x29, 0x06, 0x2c, 0xb7, 0xf1, 0x8e, 0x1a, 0x65, 0x67, 0xd7, 0x60, 0x0f, 0x66, 0xdb, 0x83,
	0xcf, 0x3c, 0x2e, 0x6c, 0x12, 0xf8, 0xaa, 0x0e, 0xf3, 0x9e, 0x13, 0x1f, 0x63, 0xde, 0x73, 0xa4,
	0xc3, 0xa7, 0xfe, 0xd3, 0xe3, 0x9e, 0x63, 0x82, 0x6d, 0x28, 0xc9, 0xef, 0x11, 0xaf, 0xdb, 0x13,
	0xe6, 0xe4, 0x18, 0x4a, 0x3a, 0x2d, 0x06, 0xc7, 0x12, 0x4a, 0x8d, 0xb8, 0xd3, 0x76, 0x4c, 0xe2,
	0x73, 0x98, 0x90, 0x90, 0x68, 0x01, 0x4a, 0x22, 0xae, 0x14, 0x25, 0x31, 0x48, 0x69, 0x2a, 0x65,
	0x34, 0xa9, 0x2a, 0xe7, 0xd1, 0x53, 0x87, 0xeb, 0xfe, 0xa1, 0xaa, 0x9c, 0xa6, 0x87, 0xa3, 0xec,
	0x44, 0x7a, 0x94, 0x4d, 0x7a, 0x46, 0x25, 0x3d, 0xb0, 0xb6, 0x61, 0x51, 0xe2, 0xca, 0xb1, 0xba,
	0x35, 0x3c, 0x48, 0x05, 0x99, 0x79, 0x1b, 0x2a, 0x91, 0x14, 0x36, 0x69, 0xb9, 0x91, 0x4d, 0x8b,
	0x0c, 0xbf, 0xfe, 0x8e, 0xbf, 0x07, 0xcb, 0xf2, 0x84, 0xc4, 0x7b, 0x29, 0xc9, 0xca, 0x43, 0x98,
	0x35, 0xba, 0x64, 0x54, 0xaf, 0x79, 0xee, 0xd2, 0x4b, 0xf0, 0xa6, 0x3a, 0xcb, 0xed, 0xc1, 0xb1,
	0x70, 0x44, 0x94, 0x1c, 0xa2, 0x9c, 0x0d, 0x8a, 0x5b, 0x70, 0x33, 0x23, 0x69, 0x4c, 0x40, 0x30,
	0xe1, 0xb2, 0x0e, 0x89, 0x45, 0xe5, 0x6f, 0x19, 0x64, 0xae, 0xa4, 0xe2, 0x34, 0x6a, 0x0a, 0x6f,
	0xc1, 0xaa, 0xd9, 0x57, 0x8f, 0x2e, 0x75, 0x47, 0x8e, 0x01, 0x87, 0x3b, 0xdd, 0xca, 0xec, 0xf4,
	0x3d, 0xb8, 0x35, 0xb6, 0xc2, 0x00, 0x6f, 0xc2, 0x44, 0x34, 0xdc, 0x88, 0xf9, 0x5b, 0x5a, 0x49,
	0xe0, 0x8f, 0xe0, 0xc6, 0xe3, 0xa8, 0x1f, 0x7c, 0xe5, 0xf8, 0x3e, 0x11, 0xa9, 0x9a, 0xde, 0x89,
	0xfa, 0xc1, 0x63, 0x2f, 0x3c, 0x72, 0x44, 0xcf, 0x98, 0x9f, 0x66, 0xe1, 0x65, 0x40, 0xe9, 0x65,
	0x1a, 0x16, 0xff, 0x04, 0x6e, 0x1e, 0xf6, 0x03, 0x16, 0x8a, 0xac, 0xba, 0xfb, 0x30, 0xef, 0x29,
	0x76, 0x56, 0x61, 0x96, 0x29, 0x41, 0x99, 0xdf, 0x39, 0x8a, 0x5b, 0xb3, 0x8e, 0x4e, 0x9a, 0x25,
	0x25, 0x28, 0xb9, 0x38, 0xca, 0x36, 0xef, 0x34, 0x0b, 0xaf, 0xc2, 0x72, 0xd6, 0x00, 0x63, 0x58,
	0x55, 0x05, 0x77, 0xcf, 0xf7, 0x08, 0x15, 0x99, 0x6c, 0xe2, 0x7f, 0x56, 0x54, 0x14, 0xb3, 0x9f,
	0x4c, 0x14, 0xef, 0xc3, 0x7c, 0x40, 0x48, 0x28, 0xf7, 0x02, 0xa1, 0x1e, 0xed, 0x9a, 0xfa, 0x97,
	0x65, 0xca, 0x2d, 0xcc, 0x2f, 0xa9, 0x2b, 0xbf, 0xeb, 0x76, 0x1d, 0x93, 0xf2, 0x8b, 0xdb, 0x73,
	0x3c, 0x7a, 0xf8, 0x38, 0xbe, 0xd0, 0x19, 0x12, 0x6d, 0xc2, 0xa2, 0xcf, 0x5c, 0xc7, 0x7f, 0x44,
	0xb8, 0x38, 0xd0, 0x47, 0x4e, 0x9e, 0x9f, 0x09, 0x7b, 0x94, 0x2d, 0x25, 0x9f, 0x52, 0x76, 0x41,
	0x53, 0x92, 0x15, 0x2d, 0x39, 0xc2, 0x46, 0x47, 0x30, 0x23, 0x0d, 0xdb, 0x53, 0x3b, 0x65, 0x52,
	0x5d, 0xac, 0xc6, 0xee, 0x2f, 0x79, 0x6e, 0x36, 0x92, 0x55, 0x87, 0xf4, 0x8c, 0xd9, 0x43, 0x25,
	0x68, 0x0f, 0x2a, 0x92, 0xe0, 0xd5, 0x29, 0xa5, 0xed, 0xc1, 0xb5, 0xb5, 0xa9, 0x32, 0xa6, 0xd7,
	0xd6, 0xbe, 0xaf, 0x83, 0x98, 0x00, 0xc8, 0xda, 0x20, 0x98, 0x70, 0x7c, 0x15, 0xcd, 0x79, 0x5b,
	0x13, 0xb2, 0xc6, 0xb0, 0x48, 0x9c, 0xb2, 0x88, 0x76, 0x4c, 0x99, 0x4f, 0x68, 0xd5, 0x81, 0xa8,
	0xfe, 0xa4, 0xef, 0xf1, 0x31, 0x59, 0xb3, 0x61, 0x5a, 0x2a, 0x57, 0x7a, 0x17, 0xa0, 0x94, 0x5c,
	0xb3, 0x4b, 0x57, 0x75, 0x27, 0xd9, 0x8b, 0x3a, 0x5e, 0x48, 0xd4, 0xdc, 0x64, 0x32, 0x33, 0x64,
	0xd4, 0xfe, 0x6a, 0x69, 0xa5, 0xd2, 0x09, 0x74, 0x98, 0x32, 0x4b, 0x1f, 0xa6, 0xeb, 0x47, 0x41,
	0x85, 0x73, 0xe8, 0xc5, 0xfe, 0xd0, 0x8b, 0xd2, 0xeb, 0x68, 0x8a, 0x57, 0xcb, 0xb4, 0x30, 0xd1,
	0x23, 0x61, 0xb5, 0xfc, 0x3a, 0x6a, 0xf4, 0x5a, 0xfc, 0x5b, 0x0b, 0xa6, 0xf7, 0xe2, 0x22, 0x3e,
	0x3e, 0xd8, 0xae, 0xc2, 0xa4, 0x18, 0x1c, 0x38, 0xbc, 0x17, 0x57, 0x29, 0x4d, 0x15, 0xcf, 0x69,
	0x99, 0x4b, 0x86, 0xee, 0x05, 0xc3, 0xdb, 0xd1, 0x7b, 0x50, 0x12, 0x4c, 0xbd, 0x1c, 0xcc, 0xee,
	0xdc, 0xce, 0x5e, 0x47, 0x33, 0x4f, 0x2d, 0x76, 0x49, 0x30, 0x7c, 0xa0, 0x6e, 0xe8, 0xf9, 0x63,
	0x73, 0xde, 0x70, 0xa0, 0x4d, 0x3a, 0x65, 0x3c, 0x1e, 0xc1, 0x63, 0x12, 0x13, 0x75, 0xdb, 0x28,
	0x98, 0x93, 0x57, 0x61, 0xb2, 0x2f, 0x06, 0x07, 0x89, 0xdb, 0x86, 0x42, 0x5b, 0x30, 0xa9, 0x6e,
	0x0f, 0xfa, 0xd5, 0x62, 0x76, 0xa7, 0x9a, 0xb5, 0x77, 0x60, 0x3b, 0x17, 0xe6, 0x55, 0xc2, 0xc8,
	0xe1, 0xbf, 0x97, 0x65, 0xeb, 0x4e, 0xf8, 0x39, 0xd1, 0x8c, 0xdf, 0x80, 0x4a, 0xa9, 0x37, 0xa0,
	0xd7, 0x8b, 0xe4, 0x36, 0x54, 0x4e, 0x25, 0xa1, 0x8a, 0xc0, 0x68, 0x30, 0x1f, 0xc9, 0x2f, 0x32,
	0xc9, 0x3a, 0x98, 0x5a, 0x12, 0x61, 0x28, 0x9f, 0x7b, 0xb4, 0x3a, 0xa9, 0xa2, 0xbf, 0x94, 0x59,
	0x70, 0xe2, 0x51, 0x5b, 0x7e, 0x44, 0x6f, 0x9a, 0x01, 0x6b, 0x2a, 0xa7, 0xd7, 0x9e, 0xb0, 0x48,
	0x98, 0x99, 0xab, 0x0e, 0xb3, 0x67, 0x21, 0xeb, 0x9b, 0x94, 0x55, 0xa7, 0xd5, 0x18, 0x97, 0x66,
	0x99, 0x4c, 0xcf, 0x5c, 0x2b, 0xd3, 0xa8, 0x99, 0xbc, 0x54, 0x80, 0x5a, 0x70, 0x2b, 0xb3, 0x60,
	0xf8, 0x86, 0x96, 0xbc, 0x51, 0x54, 0x61, 0x2a, 0x70, 0x2e, 0x7d, 0xe6, 0x74, 0xaa, 0xb3, 0xfa,
	0x48, 0x1b, 0x52, 0x96, 0x6a, 0x97, 0xd1, 0x33, 0x2f, 0xec, 0xeb, 0xe7, 0xc4, 0xea, 0x9c, 0x2a,
	0x92, 0x59, 0xa6, 0xcc, 0x03, 0xf7, 0x7e, 0x4c, 0xaa, 0xf3, 0x2a, 0xe0, 0xea, 0xb7, 0xcc, 0xd6,
	0x19, 0x21, 0xd5, 0x05, 0xd5, 0x5a, 0xe5, 0xcf, 0x54, 0x87, 0x5e, 0xd4, 0x63, 0x90, 0xe9, 0xd0,
	0x1d, 0x58, 0xc8, 0x46, 0x38, 0x35, 0x30, 0x59, 0x0a, 0x2e, 0x1e, 0x98, 0xd6, 0x61, 0x46, 0xc5,
	0x3e, 0x75, 0x80, 0x86, 0x0c, 0xf9, 0x55, 0x78, 0x7d, 0xc2, 0x85, 0xd3, 0x0f, 0xcc, 0x7d, 0x7c,
	0xc8, 0xd8, 0xf9, 0xd7, 0x22, 0x40, 0x2b, 0xf0, 0x8e, 0x49, 0x78, 0xee, 0xb9, 0x04, 0x05, 0x30,
	0x9f, 0xb9, 0xfe, 0xa0, 0x7b, 0x39, 0x2f, 0x19, 0xd9, 0x31, 0xbf, 0x86, 0xaf, 0x12, 0x89, 0x3b,
	0xe2, 0x37, 0x7f, 0xfe, 0xdb, 0x6f, 0x4a, 0x08, 0xcf, 0x37, 0xcf, 0xb7, 0x9b, 0xc9, 0x20, 0xbe,
	0x6b, 0xbd, 0x8b, 0x7e, 0x04, 0x73, 0xe9, 0x79, 0x0a, 0xad, 0x36, 0xf4, 0x9b, 0x6c, 0x23, 0xd1,
	0xf8, 0x69, 0x3f, 0x10, 0x97, 0xb5, 0x7b, 0xa3, 0x75, 0x67, 0x6c, 0x04, 0xc3, 0x2b, 0x0a, 0x64,
	0x11, 0x65, 0x41, 0xd0, 0x00, 0x60, 0x78, 0x47, 0x42, 0x77, 0x47, 0xf5, 0x64, 0x2f, 0x6e, 0xb5,
	0x8d, 0xc2, 0xef, 0x06, 0xe5, 0x1d, 0x85, 0xf2, 0x06, 0xba, 0x97, 0x41, 0x69, 0x3e, 0x4f, 0x7e,
	0xbe, 0x68, 0x9a, 0xab, 0x11, 0xfa, 0x1a, 0xe6, 0x33, 0xb7, 0xa9, 0x42, 0xe7, 0xf0, 0x98, 0x73,
	0x63, 0x37, 0x30, 0x7c, 0x47, 0xe1, 0xde, 0x42, 0x2b, 0x59, 0xdc, 0x18, 0xab, 0x0f, 0x53, 0x66,
	0x3c, 0x43, 0xb7, 0x47, 0xb5, 0xa5, 0x6e, 0x46, 0xb5, 0xf5, 0xfc, 0x8f, 0x06, 0xe4, 0x6d, 0x05,
	0x72, 0x0f, 0x6d, 0x14, 0x3b, 0xa7, 0xc6, 0x60, 0xf4, 0x43, 0x15, 0xd4, 0x96, 0xef, 0x2b, 0xc4,
	0x22, 0xbf, 0xae, 0x06, 0xbb, 0xad, 0xc0, 0x56, 0xd0, 0xcd, 0x2c, 0x98, 0x06, 0xf8, 0xb9, 0x05,
	0x8b, 0x23, 0x77, 0x44, 0xf4, 0x46, 0xb6, 0x52, 0xe4, 0xde, 0x3a, 0x6b, 0xf7, 0xaf, 0x16, 0x32,
	0xd8, 0x9b, 0x0a, 0x1b, 0xa3, 0x7a, 0xbe, 0xa3, 0x2f, 0x9a, 0xe7, 0x66, 0x21, 0xfa, 0xc6, 0x4a,
	0xae, 0x60, 0xf1, 0xe0, 0x3b, 0x62, 0x48, 0xfe, 0x20, 0x3d, 0x62, 0x48, 0xc1, 0xec, 0x8c, 0xef,
	0x2b, 0x43, 0xee, 0xa2, 0xf5, 0x9c, 0x20, 0x34, 0x9f, 0xeb, 0xd9, 0xfb, 0x05, 0xfa, 0x95, 0x15,
	0xbf, 0x87, 0x64, 0xfb, 0x0b, 0xda, 0xbc, 0xee, 0xb3, 0x69, 0xed, 0x9d, 0x6b, 0x48, 0x66, 0x6d,
	0xc2, 0x6b, 0xd2, 0x26, 0x31, 0x14, 0xe0, 0x4d, 0x57, 0x2e, 0xf3, 0x68, 0x57, 0x9e, 0xdc, 0x9f,
	0x5a, 0xea, 0xe1, 0x23, 0xfb, 0xbc, 0x86, 0xde, 0xbc, 0xd6, 0x23, 0x76, 0xed, 0xad, 0x97, 0x89,
	0x19, 0x53, 0x36, 0x94, 0x29, 0x6b, 0x78, 0x79, 0xcc, 0x94, 0x33, 0x42, 0xa4, 0x15, 0x7f, 0xb0,
	0x60, 0xa5, 0x15, 0x09, 0xa6, 0x1d, 0x4a, 0x87, 0xe6, 0xfd, 0x57, 0x79, 0x84, 0x7d, 0x95, 0xf0,
	0x98, 0x0a, 0x80, 0xef, 0x16, 0x86, 0xa7, 0xe9, 0x44, 0x82, 0x49, 0xeb, 0x7e, 0x61, 0x01, 0x1a,
	0x7f, 0xe2, 0x43, 0x59, 0xef, 0x0b, 0x1f, 0x1a, 0x6b, 0x6f, 0xbf, 0x54, 0xce, 0x98, 0xf4, 0x86,
	0x32, 0xe9, 0x0e, 0xae, 0x8e, 0x99, 0xc4, 0xbd, 0x2e, 0x35, 0x09, 0x53, 0xc6, 0x8c, 0x3d, 0xe5,
	0x8d, 0x1a, 0x53, 0xf4, 0x88, 0x38, 0x6a, 0x4c, 0xe1, 0x9b, 0xe0, 0x55, 0xc6, 0x10, 0xda, 0x31,
	0xc6, 0xfc, 0x52, 0xef, 0x9e, 0x11, 0x5b, 0xc6, 0x76, 0x4f, 0xbe, 0x29, 0x6f, 0xbd, 0x4c, 0x2c,
	0xaf, 0x9c, 0x65, 0x2c, 0x79, 0x2e, 0x87, 0xb9, 0x17, 0xcd, 0x0e, 0x11, 0x8e, 0xe7, 0xcb, 0x1e,
	0x31, 0x9b, 0xba, 0x51, 0xa3, 0xb1, 0x26, 0x30, 0x72, 0x2b, 0xaf, 0xd5, 0x8b, 0x05, 0x0c, 0xf4,
	0x5b, 0x0a, 0xba, 0x8e, 0xee, 0x16, 0x41, 0xeb, 0x36, 0x8f, 0x2e, 0x54, 0x75, 0x49, 0x0f, 0xd1,
	0xe3, 0xd5, 0x25, 0xe7, 0x26, 0x39, 0x5e, 0x5d, 0xf2, 0xe6, 0x70, 0xbc, 0xa6, 0xac, 0xb8, 0x89,
	0x6e, 0x48, 0x2b, 0x5c, 0x25, 0x61, 0x80, 0x1f, 0xfd, 0xa5, 0xf4, 0xeb, 0xd6, 0x9f, 0x4a, 0xe8,
	0x3d, 0x28, 0x3b, 0x81, 0x87, 0x37, 0x60, 0xf1, 0xf3, 0xd6, 0xf1, 0x71, 0x5d, 0x6b, 0xa9, 0xb7,
	0x8e, 0x0e, 0x6b, 0x73, 0x0f, 0xfb, 0x0e, 0xe7, 0x94, 0x88, 0x06, 0x0b, 0xbb, 0x3b, 0xe5, 0xed,
	0xc6, 0xd6, 0xbb, 0x25, 0xab, 0xb4, 0xb3, 0xe4, 0x04, 0x81, 0xef, 0xb9, 0x6a, 0xc6, 0x69, 0x7e,
	0xcd, 0x19, 0xdd, 0x59, 0x4d, 0x73, 0x06, 0x0f, 0xce, 0x18, 0x7b, 0xd0, 0xf7, 0xfa, 0x64, 0x77,
	0x4c, 0x72, 0xb7, 0x40, 0xd2, 0x3e, 0x82, 0xf2, 0x87, 0x5b, 0x1f, 0xa0, 0x43, 0xd8, 0xb7, 0x89,
	0x88, 0x42, 0x4a, 0x3a, 0xf5, 0x8b, 0x1e, 0xa1, 0x75, 0xd1, 0x23, 0xf5, 0x88, 0x93, 0xb0, 0xde,
	0x61, 0x84, 0xd7, 0x29, 0x13, 0xf5, 0x9e, 0x73, 0x4e, 0xea, 0x01, 0x09, 0xfb, 0x1e, 0x97, 0xd3,
	0x6b, 0x5d, 0xb0, 0xba, 0xe3, 0xba, 0x84, 0x73, 0x25, 0x1b, 0x12, 0xce, 0xa2, 0xd0, 0x25, 0x0d,
	0xfb, 0x5b, 0x52, 0xe3, 0x87, 0xe8, 0x43, 0x78, 0x77, 0x5c, 0x63, 0x2c, 0x35, 0xd4, 0x4a, 0x06,
	0x1e, 0x17, 0x0d, 0x34, 0x09, 0x13, 0xbf, 0x2f, 0x59, 0x53, 0xe1, 0x2e, 0xdc, 0x19, 0x09, 0x46,
	0xfd, 0x31, 0x73, 0xa3, 0x3e, 0xa1, 0xfa, 0xdf, 0xc7, 0x68, 0xad, 0x27, 0x44, 0xc0, 0x77, 0x9b,
	0xcd, 0x0e, 0x73, 0x79, 0x23, 0x15, 0xa6, 0xe6, 0xe9, 0xa4, 0xca, 0xc9, 0x07, 0xff, 0x09, 0x00,
	0x00, 0xff, 0xff, 0x00, 0x11, 0xdf, 0xcb, 0xbf, 0x1e, 0x00, 0x00,
}
