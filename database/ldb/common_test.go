package ldb

import (
	"bytes"
	"encoding/hex"
	"fmt"
	"os"
	"path/filepath"

	"massnet.org/mass-wallet/database"
	"massnet.org/mass-wallet/massutil"
	"massnet.org/mass-wallet/wire"
)

const testDbRoot = "testData/testdbs"

var (
	blkHex0 = "0aef020a00100120d8a9bce1052a00322409b2127b7afdeda33b11618f76673e2cc77a1932518a88c31bc87f214a5e1e4baab89f3a3a2409b2127b7afdeda33b11618f76673e2cc77a1932518a88c31bc87f214a5e1e4baab89f3a42050a034000004a220a202c90c7dac2a3e5736f81e20e5e2dc13a971b7997782db9a9f870920bcc7d73b352480a220a20cbe0e91e51edc29927b46b289d97a3de628ec62767787a363d35f4a1d1d7f73b12220a200ffc112276713ba83b6ac053c29d45a97c09adb5a10df4bbc1dec25b3aafe8075a0c0a0305dd111203027ad2181462480a220a204207ef76dcfce214bf43b19003774924ef3fec6a643f659eb96d48fb52f35de212220a2035080e4b7a4b76219bcf52241119fb3ec94edc0287f35664683758556de23cc06a480a220a203e934b8d0437774109efea7ccee91853cb3a35cd54c9c404928099488ead3ddc12220a2001884fa19431fa2e9dbbd525c93a6d8e29cfd98fa3e9097a48c2a4f5d4bab2ee12e40612e106080110011ada060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001a61080112100a080a0010ffffffff0f20ffffffff0f1a4b0880e497d01212434104678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5fac"
	blkHex1 = "0a95030a001001180120e8a9bce1052a2409b6495e9b02ce99b911d80e1f95e8ef469319d2db05320895355721d73658995105d2a0322409f140da6e8a1dcbc311b4de5f469ebf5c071939a50d2eb4c2fc5e21d32f81287546f63a3a2409332a1d8a55b6c4a111e2dfdc2f5b02b6c6197cfcc9cd9024f6a92132c3867350eec57942050a034000004a220a20b576194c79450dcf26909c8d61f20690cce9eca1c9b99cdb1efbbc152d2254f052480a220a20542647e3bea741fb3f67e848832d662af412f2a720458f5de41a04b7938f39f012220a20f222589b19f75d4ecee9743e10cf87a47fcc684f446315fb5dcd8c862bf5b3035a0c0a0382eb09120321c00e181462480a220a20c4ce9220ca96bca236cc62dbafad1c8e4a17b88c3f454470ecc4c81436962af112220a2031b872044da04818ec5570f689c1280fe891d23133de65dd6c46c86c119026236a480a220a20a080165116705d379b92a16b5a65b29153c3fee8907e470f4f4123d024b0634d12220a207fe223c154c7639a98bb3bcd58e39db7ca832282485f0f15d81323c72dacd06212e40612e106080110011adaab201080112320a080a0010ffffffff0f1a20000000000000000000000000000000000000000000000000000000000000000020ffffffff0f1a1e0880bcc1960b12160014e20f9b5375ff84fbb3832a83339d6144daf477491a1e0880a8d6b90712160014dbc4a68ccc3bda2ea7e3bab21d12add0cf9376f81a2812266a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf92a100101000c2f50325753482f627463642f"
	blkHex2 = "0a95030a001001180220eba9bce1052a2409c3dc60151e0f3ef5119843056c1c9aeddd19df6a9243431371452171ce84731b7ad8bc3224091d5935363f41e73a11fced244bbf478d4519382f4e0fee57513f2189e7270223532f0c3a2409332a1d8a55b6c4a111e2dfdc2f5b02b6c6197cfcc9cd9024f6a92132c3867350eec57942050a034008004a220a20b29729934be32b0fa0224b38afcec735320eff0ba7cdd11617ea9efb87ba1c6052480a220a20542647e3bea741fb3f67e848832d662af412f2a720458f5de41a04b7938f39f012220a20f222589b19f75d4ecee9743e10cf87a47fcc684f446315fb5dcd8c862bf5b3035a0c0a0355590612030a4609181462480a220a20cf06d1d2e04c07596ef8445197a003f9a117ecd389b4bbfef26b9a8ceba6010212220a200188717f26a6e101dafb2b72db17f31363111ec1f6134b3d27dbdf4cfbef3e2f6a480a220a20e22b7f04f4b90882bad3f3c6f96cf7528c8c4d8dcd15cb4ecb5ff72ec678b03312220a207c4f15fd9ce4a516bc28b1a5460fd71a4c117c8b29db07b7c578d7219b603f3312e40612e106080110011adaab201080112320a080a0010ffffffff0f1a20000000000000000000000000000000000000000000000000000000000000000020ffffffff0f1a1e0880bcc1960b12160014e20f9b5375ff84fbb3832a83339d6144daf477491a1e0880a8d6b90712160014dbc4a68ccc3bda2ea7e3bab21d12add0cf9376f81a2812266a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf92a100102000c2f50325753482f627463642f"
	blkHex3 = "0a95030a001001180320eca9bce1052a2409b738ea39c8305df61102b63e1f8cc7ddf5194e84d015d3e22788219b87db46660d1d093224095479014d607bc1e61139f58d5b91227e6c195148db25b4ff04ad213638ccc2aa7efd3d3a2409332a1d8a55b6c4a111e2dfdc2f5b02b6c6197cfcc9cd9024f6a92132c3867350eec57942050a034010014a220a20bab0df0530b119cf1206913f1d9f705815cd7bf0b7b9f4721c120386600cf8eb52480a220a20542647e3bea741fb3f67e848832d662af412f2a720458f5de41a04b7938f39f012220a20f222589b19f75d4ecee9743e10cf87a47fcc684f446315fb5dcd8c862bf5b3035a0c0a033a9e0f1203c7970a181462480a220a20793376c1103a6822f6bdc0f2a1c1f7cf4eb9f2b3044e5c94c4675f1831b1086612220a2041c77e86b3155593859a8b9cc9ae3968c3bf00b06e1c03769fa606927c0f91e66a480a220a2013f57e54f2a18875e178d5d934539daaf38a89909684cb6fbd5b88a823db089212220a2049d4a07a54b6c1e3211b2384168bba14249f7bbfc5763b2bb958e5e66fdd064812e40612e106080110011ada060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001ab201080112320a080a0010ffffffff0f1a20000000000000000000000000000000000000000000000000000000000000000020ffffffff0f1a1e0880bcc1960b12160014e20f9b5375ff84fbb3832a83339d6144daf477491a1e0880a8d6b90712160014dbc4a68ccc3bda2ea7e3bab21d12add0cf9376f81a2812266a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf92a100103000c2f50325753482f627463642f"
)

var addressList = []string{
	"bc1qug8ek5m4l7z0hvur92pn88tpgnd0ga6f0r8069",
	"bc1qm0z2drxv80dzaflrh2ep6y4d6r8exahcc48gnv",
}

// filesExists returns whether or not the named file or directory exists.
func fileExists(name string) bool {
	if _, err := os.Stat(name); err != nil {
		if os.IsNotExist(err) {
			return false
		}
	}
	return true
}

func decodeHexStr(hexStr string) (block *massutil.Block, err error) {
	if len(hexStr)%2 != 0 {
		hexStr = "0" + hexStr
	}
	decoded, err := hex.DecodeString(hexStr)
	if err != nil {
		return nil, err
	}
	if err != nil {
		return nil, err
	}
	var blk1 wire.MsgBlock
	err = blk1.Deserialize(bytes.NewBuffer(decoded), wire.Packet)
	if err != nil {
		return nil, err
	}
	block = massutil.NewBlock(&blk1)
	return block, nil
}

func insertBlock(db database.Db, blk string) (*massutil.Block, error) {
	block, err := decodeHexStr(blk)
	if err != nil {
		err := fmt.Errorf("failed to decode block str : %v", err)
		return nil, err
	}
	_, err = db.InsertBlock(block)
	if err != nil {
		err := fmt.Errorf("failed to insert block : %v", err)
		return nil, err
	}
	return block, nil
}

func GetDb(dbName string) (database.Db, func(), error) {
	// Create the root directory for test databases.
	if !fileExists(testDbRoot) {
		if err := os.MkdirAll(testDbRoot, 0700); err != nil {
			err := fmt.Errorf("unable to create test db "+
				"root: %v", err)
			return nil, nil, err
		}
	}
	dbPath := filepath.Join(testDbRoot, dbName)
	_ = os.RemoveAll(dbPath)
	db, err := database.CreateDB(dbtype, dbPath)
	if err != nil {
		fmt.Println("create db error: ", err)
		return nil, nil, err
	}
	insertBlock(db, blkHex0)
	if err != nil {
		err := fmt.Errorf("failed to insert genesis block: %v", err)
		return nil, nil, err
	}
	_, err = insertBlock(db, blkHex1)
	if err != nil {
		return nil, nil, err
	}
	_, err = insertBlock(db, blkHex2)
	if err != nil {
		return nil, nil, err
	}
	_, err = insertBlock(db, blkHex3)
	if err != nil {
		return nil, nil, err
	}
	// Setup a tearDown function for cleaning up.  This function is
	// returned to the caller to be invoked when it is done testing.
	tearDown := func() {
		dbVersionPath := filepath.Join(testDbRoot, dbName+".ver")
		db.Sync()
		db.Close()
		os.RemoveAll(dbPath)
		os.Remove(dbVersionPath)
		os.RemoveAll(testDbRoot)
	}
	return db, tearDown, nil
}
