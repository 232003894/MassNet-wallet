// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: config.proto

/*
Package configpb is a generated protocol buffer package.

It is generated from these files:
	config.proto

It has these top-level messages:
	Config
	CommonConfig
	AppConfig
	ChainConfig
	NetworkConfig
	DataConfig
	LogConfig
	MemPoolConfig
	WalletConfig
	P2PConfig
	APIConfig
*/
package configpb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Config struct {
	Common  *CommonConfig  `protobuf:"bytes,1,opt,name=common" json:"common"`
	App     *AppConfig     `protobuf:"bytes,2,opt,name=app" json:"app"`
	Network *NetworkConfig `protobuf:"bytes,3,opt,name=network" json:"network"`
	Db      *DataConfig    `protobuf:"bytes,4,opt,name=db" json:"db"`
	Log     *LogConfig     `protobuf:"bytes,5,opt,name=log" json:"log"`
	Chain   *ChainConfig   `protobuf:"bytes,6,opt,name=chain" json:"chain"`
	Pool    *MemPoolConfig `protobuf:"bytes,7,opt,name=pool" json:"pool"`
	Wallet  *WalletConfig  `protobuf:"bytes,8,opt,name=wallet" json:"wallet"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{0} }

func (m *Config) GetCommon() *CommonConfig {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *Config) GetApp() *AppConfig {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *Config) GetNetwork() *NetworkConfig {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *Config) GetDb() *DataConfig {
	if m != nil {
		return m.Db
	}
	return nil
}

func (m *Config) GetLog() *LogConfig {
	if m != nil {
		return m.Log
	}
	return nil
}

func (m *Config) GetChain() *ChainConfig {
	if m != nil {
		return m.Chain
	}
	return nil
}

func (m *Config) GetPool() *MemPoolConfig {
	if m != nil {
		return m.Pool
	}
	return nil
}

func (m *Config) GetWallet() *WalletConfig {
	if m != nil {
		return m.Wallet
	}
	return nil
}

type CommonConfig struct {
}

func (m *CommonConfig) Reset()                    { *m = CommonConfig{} }
func (m *CommonConfig) String() string            { return proto.CompactTextString(m) }
func (*CommonConfig) ProtoMessage()               {}
func (*CommonConfig) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{1} }

type AppConfig struct {
	Profile            string `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile"`
	CPUProfile         string `protobuf:"bytes,2,opt,name=cpu_profile,json=cpuProfile,proto3" json:"cpu_profile"`
	NoPeerBloomFilters bool   `protobuf:"varint,3,opt,name=no_peer_bloom_filters,json=noPeerBloomFilters,proto3" json:"no_peer_bloom_filters"`
}

func (m *AppConfig) Reset()                    { *m = AppConfig{} }
func (m *AppConfig) String() string            { return proto.CompactTextString(m) }
func (*AppConfig) ProtoMessage()               {}
func (*AppConfig) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{2} }

func (m *AppConfig) GetProfile() string {
	if m != nil {
		return m.Profile
	}
	return ""
}

func (m *AppConfig) GetCPUProfile() string {
	if m != nil {
		return m.CPUProfile
	}
	return ""
}

func (m *AppConfig) GetNoPeerBloomFilters() bool {
	if m != nil {
		return m.NoPeerBloomFilters
	}
	return false
}

type ChainConfig struct {
	DisableCheckpoints bool `protobuf:"varint,1,opt,name=disable_checkpoints,json=disableCheckpoints,proto3" json:"disable_checkpoints"`
}

func (m *ChainConfig) Reset()                    { *m = ChainConfig{} }
func (m *ChainConfig) String() string            { return proto.CompactTextString(m) }
func (*ChainConfig) ProtoMessage()               {}
func (*ChainConfig) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{3} }

func (m *ChainConfig) GetDisableCheckpoints() bool {
	if m != nil {
		return m.DisableCheckpoints
	}
	return false
}

type NetworkConfig struct {
	P2P *P2PConfig `protobuf:"bytes,1,opt,name=p2p" json:"p2p"`
	API *APIConfig `protobuf:"bytes,2,opt,name=api" json:"api"`
}

func (m *NetworkConfig) Reset()                    { *m = NetworkConfig{} }
func (m *NetworkConfig) String() string            { return proto.CompactTextString(m) }
func (*NetworkConfig) ProtoMessage()               {}
func (*NetworkConfig) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{4} }

func (m *NetworkConfig) GetP2P() *P2PConfig {
	if m != nil {
		return m.P2P
	}
	return nil
}

func (m *NetworkConfig) GetAPI() *APIConfig {
	if m != nil {
		return m.API
	}
	return nil
}

type DataConfig struct {
	DataDir string `protobuf:"bytes,1,opt,name=data_dir,json=dataDir,proto3" json:"data_dir"`
	DbType  string `protobuf:"bytes,2,opt,name=db_type,json=dbType,proto3" json:"db_type"`
}

func (m *DataConfig) Reset()                    { *m = DataConfig{} }
func (m *DataConfig) String() string            { return proto.CompactTextString(m) }
func (*DataConfig) ProtoMessage()               {}
func (*DataConfig) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{5} }

func (m *DataConfig) GetDataDir() string {
	if m != nil {
		return m.DataDir
	}
	return ""
}

func (m *DataConfig) GetDbType() string {
	if m != nil {
		return m.DbType
	}
	return ""
}

type LogConfig struct {
	LogDir     string `protobuf:"bytes,1,opt,name=log_dir,json=logDir,proto3" json:"log_dir"`
	DebugLevel string `protobuf:"bytes,2,opt,name=debug_level,json=debugLevel,proto3" json:"debug_level"`
}

func (m *LogConfig) Reset()                    { *m = LogConfig{} }
func (m *LogConfig) String() string            { return proto.CompactTextString(m) }
func (*LogConfig) ProtoMessage()               {}
func (*LogConfig) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{6} }

func (m *LogConfig) GetLogDir() string {
	if m != nil {
		return m.LogDir
	}
	return ""
}

func (m *LogConfig) GetDebugLevel() string {
	if m != nil {
		return m.DebugLevel
	}
	return ""
}

type MemPoolConfig struct {
}

func (m *MemPoolConfig) Reset()                    { *m = MemPoolConfig{} }
func (m *MemPoolConfig) String() string            { return proto.CompactTextString(m) }
func (*MemPoolConfig) ProtoMessage()               {}
func (*MemPoolConfig) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{7} }

type WalletConfig struct {
	WalletDir string `protobuf:"bytes,1,opt,name=wallet_dir,json=walletDir,proto3" json:"wallet_dir"`
}

func (m *WalletConfig) Reset()                    { *m = WalletConfig{} }
func (m *WalletConfig) String() string            { return proto.CompactTextString(m) }
func (*WalletConfig) ProtoMessage()               {}
func (*WalletConfig) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{8} }

func (m *WalletConfig) GetWalletDir() string {
	if m != nil {
		return m.WalletDir
	}
	return ""
}

type P2PConfig struct {
	Seeds            string   `protobuf:"bytes,1,opt,name=seeds,proto3" json:"seeds"`
	AddPeer          []string `protobuf:"bytes,2,rep,name=add_peer,json=addPeer" json:"add_peer"`
	SkipUpnp         bool     `protobuf:"varint,3,opt,name=skip_upnp,json=skipUpnp,proto3" json:"skip_upnp"`
	HandshakeTimeout uint32   `protobuf:"varint,4,opt,name=handshake_timeout,json=handshakeTimeout,proto3" json:"handshake_timeout"`
	DialTimeout      uint32   `protobuf:"varint,5,opt,name=dial_timeout,json=dialTimeout,proto3" json:"dial_timeout"`
	VaultMode        bool     `protobuf:"varint,6,opt,name=vault_mode,json=vaultMode,proto3" json:"vault_mode"`
	ListenAddress    string   `protobuf:"bytes,7,opt,name=listen_address,json=listenAddress,proto3" json:"listen_address"`
}

func (m *P2PConfig) Reset()                    { *m = P2PConfig{} }
func (m *P2PConfig) String() string            { return proto.CompactTextString(m) }
func (*P2PConfig) ProtoMessage()               {}
func (*P2PConfig) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{9} }

func (m *P2PConfig) GetSeeds() string {
	if m != nil {
		return m.Seeds
	}
	return ""
}

func (m *P2PConfig) GetAddPeer() []string {
	if m != nil {
		return m.AddPeer
	}
	return nil
}

func (m *P2PConfig) GetSkipUpnp() bool {
	if m != nil {
		return m.SkipUpnp
	}
	return false
}

func (m *P2PConfig) GetHandshakeTimeout() uint32 {
	if m != nil {
		return m.HandshakeTimeout
	}
	return 0
}

func (m *P2PConfig) GetDialTimeout() uint32 {
	if m != nil {
		return m.DialTimeout
	}
	return 0
}

func (m *P2PConfig) GetVaultMode() bool {
	if m != nil {
		return m.VaultMode
	}
	return false
}

func (m *P2PConfig) GetListenAddress() string {
	if m != nil {
		return m.ListenAddress
	}
	return ""
}

type APIConfig struct {
	APIUrl      string `protobuf:"bytes,1,opt,name=api_url,json=apiUrl,proto3" json:"api_url"`
	APIPortGRPC string `protobuf:"bytes,2,opt,name=api_port_grpc,json=apiPortGRPC,proto3" json:"api_port_grpc"`
	APIPortHttp string `protobuf:"bytes,3,opt,name=api_port_http,json=apiPortHttp,proto3" json:"api_port_http"`
	APIUseTls   bool   `protobuf:"varint,4,opt,name=api_use_tls,json=apiUseTls,proto3" json:"api_use_tls"`
	APICORSAddr string `protobuf:"bytes,5,opt,name=api_cors_addr,json=apiCORSAddr,proto3" json:"api_cors_addr"`
}

func (m *APIConfig) Reset()                    { *m = APIConfig{} }
func (m *APIConfig) String() string            { return proto.CompactTextString(m) }
func (*APIConfig) ProtoMessage()               {}
func (*APIConfig) Descriptor() ([]byte, []int) { return fileDescriptorConfig, []int{10} }

func (m *APIConfig) GetAPIUrl() string {
	if m != nil {
		return m.APIUrl
	}
	return ""
}

func (m *APIConfig) GetAPIPortGRPC() string {
	if m != nil {
		return m.APIPortGRPC
	}
	return ""
}

func (m *APIConfig) GetAPIPortHttp() string {
	if m != nil {
		return m.APIPortHttp
	}
	return ""
}

func (m *APIConfig) GetAPIUseTls() bool {
	if m != nil {
		return m.APIUseTls
	}
	return false
}

func (m *APIConfig) GetAPICORSAddr() string {
	if m != nil {
		return m.APICORSAddr
	}
	return ""
}

func init() {
	proto.RegisterType((*Config)(nil), "configpb.Config")
	proto.RegisterType((*CommonConfig)(nil), "configpb.CommonConfig")
	proto.RegisterType((*AppConfig)(nil), "configpb.AppConfig")
	proto.RegisterType((*ChainConfig)(nil), "configpb.ChainConfig")
	proto.RegisterType((*NetworkConfig)(nil), "configpb.NetworkConfig")
	proto.RegisterType((*DataConfig)(nil), "configpb.DataConfig")
	proto.RegisterType((*LogConfig)(nil), "configpb.LogConfig")
	proto.RegisterType((*MemPoolConfig)(nil), "configpb.MemPoolConfig")
	proto.RegisterType((*WalletConfig)(nil), "configpb.WalletConfig")
	proto.RegisterType((*P2PConfig)(nil), "configpb.P2PConfig")
	proto.RegisterType((*APIConfig)(nil), "configpb.APIConfig")
}

func init() { proto.RegisterFile("config.proto", fileDescriptorConfig) }

var fileDescriptorConfig = []byte{
	// 685 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x94, 0x6f, 0x4f, 0xdb, 0x3a,
	0x14, 0xc6, 0xd5, 0x42, 0xdb, 0xe4, 0xb4, 0xe5, 0xde, 0x6b, 0xe0, 0x92, 0xab, 0x2b, 0x06, 0x8b,
	0x86, 0x34, 0x09, 0xad, 0x13, 0xdd, 0xfb, 0x69, 0xac, 0xec, 0x9f, 0x04, 0x53, 0x15, 0x81, 0xf6,
	0x6a, 0x8a, 0x9c, 0xd8, 0xa4, 0x56, 0xdd, 0xf8, 0xc8, 0x76, 0x41, 0x7c, 0xab, 0x7d, 0xad, 0xbd,
	0xda, 0x57, 0x98, 0xec, 0x24, 0x6d, 0x41, 0x7b, 0xe9, 0xe7, 0xfc, 0x62, 0xfb, 0x3c, 0xcf, 0x71,
	0x60, 0x90, 0xab, 0xf2, 0x56, 0x14, 0x23, 0xd4, 0xca, 0x2a, 0x12, 0x54, 0x2b, 0xcc, 0xe2, 0x9f,
	0x6d, 0xe8, 0x4e, 0xfc, 0x82, 0x8c, 0xa0, 0x9b, 0xab, 0xc5, 0x42, 0x95, 0x51, 0xeb, 0xb8, 0xf5,
	0xb2, 0x3f, 0xfe, 0x77, 0xd4, 0x50, 0xa3, 0x89, 0xd7, 0x2b, 0x2e, 0xa9, 0x29, 0x72, 0x02, 0x5b,
	0x14, 0x31, 0x6a, 0x7b, 0x78, 0x77, 0x0d, 0x9f, 0x23, 0xd6, 0xa4, 0xab, 0x93, 0x33, 0xe8, 0x95,
	0xdc, 0xde, 0x2b, 0x3d, 0x8f, 0xb6, 0x3c, 0x7a, 0xb0, 0x46, 0xbf, 0x56, 0x85, 0x1a, 0x6f, 0x38,
	0xf2, 0x02, 0xda, 0x2c, 0x8b, 0xb6, 0x3d, 0xbd, 0xb7, 0xa6, 0x2f, 0xa8, 0xa5, 0x35, 0xda, 0x66,
	0x99, 0x3b, 0x5f, 0xaa, 0x22, 0xea, 0x3c, 0x3d, 0xff, 0x52, 0x15, 0xcd, 0xf9, 0x52, 0x15, 0xe4,
	0x14, 0x3a, 0xf9, 0x8c, 0x8a, 0x32, 0xea, 0x7a, 0x70, 0x7f, 0xa3, 0x2b, 0x27, 0xd7, 0x68, 0xc5,
	0x90, 0x53, 0xd8, 0x46, 0xa5, 0x64, 0xd4, 0x7b, 0x7a, 0xd3, 0x2b, 0xbe, 0x98, 0x2a, 0x25, 0x6b,
	0xda, 0x43, 0xce, 0xb0, 0x7b, 0x2a, 0x25, 0xb7, 0x51, 0xf0, 0xd4, 0xb0, 0x6f, 0x5e, 0x6f, 0x0c,
	0xab, 0xa8, 0x78, 0x07, 0x06, 0x9b, 0x46, 0xc6, 0x0f, 0x10, 0xae, 0xbc, 0x22, 0x11, 0xf4, 0x50,
	0xab, 0x5b, 0x21, 0xb9, 0xb7, 0x3f, 0x4c, 0x9a, 0x25, 0x39, 0x82, 0x7e, 0x8e, 0xcb, 0xb4, 0xa9,
	0xb6, 0x7d, 0x15, 0x72, 0x5c, 0x4e, 0x6b, 0xe0, 0x0c, 0xf6, 0x4b, 0x95, 0x22, 0xe7, 0x3a, 0xcd,
	0xa4, 0x52, 0x8b, 0xf4, 0x56, 0x48, 0xcb, 0xb5, 0xf1, 0x7e, 0x07, 0x09, 0x29, 0xd5, 0x94, 0x73,
	0xfd, 0xde, 0x95, 0x3e, 0x56, 0x95, 0xf8, 0x2d, 0xf4, 0x37, 0xba, 0x27, 0xaf, 0x61, 0x97, 0x09,
	0x43, 0x33, 0xc9, 0xd3, 0x7c, 0xc6, 0xf3, 0x39, 0x2a, 0x51, 0x5a, 0xe3, 0x2f, 0x12, 0x24, 0xa4,
	0x2e, 0x4d, 0xd6, 0x95, 0xf8, 0x3b, 0x0c, 0x1f, 0x65, 0xe7, 0xc2, 0xc0, 0x31, 0xd6, 0x93, 0xb3,
	0x11, 0xc6, 0x74, 0x3c, 0x6d, 0xc2, 0xc0, 0x31, 0x56, 0x33, 0x23, 0xfe, 0x30, 0x33, 0xd3, 0x2f,
	0xeb, 0x99, 0x11, 0xf1, 0x3b, 0x80, 0x75, 0xd8, 0xe4, 0x3f, 0x08, 0x18, 0xb5, 0x34, 0x65, 0x42,
	0x37, 0xde, 0xb8, 0xf5, 0x85, 0xd0, 0xe4, 0x00, 0x7a, 0x2c, 0x4b, 0xed, 0x03, 0x36, 0xbe, 0x74,
	0x59, 0x76, 0xfd, 0x80, 0x3c, 0xfe, 0x00, 0xe1, 0x6a, 0x0e, 0x1c, 0x25, 0x55, 0xb1, 0xf1, 0x7d,
	0x57, 0xaa, 0xc2, 0x7d, 0x7e, 0x04, 0x7d, 0xc6, 0xb3, 0x65, 0x91, 0x4a, 0x7e, 0xc7, 0x65, 0x63,
	0xad, 0x97, 0x2e, 0x9d, 0x12, 0xff, 0x05, 0xc3, 0x47, 0xc9, 0xc7, 0xaf, 0x60, 0xb0, 0x99, 0x2d,
	0x39, 0x04, 0xa8, 0xd2, 0xdd, 0xd8, 0x3d, 0xac, 0x94, 0x0b, 0xa1, 0xe3, 0x5f, 0x2d, 0x08, 0x57,
	0x16, 0x90, 0x3d, 0xe8, 0x18, 0xce, 0x99, 0xa9, 0xb9, 0x6a, 0xe1, 0xda, 0xa3, 0x8c, 0xf9, 0xfc,
	0xa2, 0xf6, 0xf1, 0x96, 0x6b, 0x8f, 0x32, 0xe6, 0x22, 0x23, 0xff, 0x43, 0x68, 0xe6, 0x02, 0xd3,
	0x25, 0x96, 0x58, 0xa7, 0x19, 0x38, 0xe1, 0x06, 0x4b, 0x24, 0xa7, 0xf0, 0xcf, 0x8c, 0x96, 0xcc,
	0xcc, 0xe8, 0x9c, 0xa7, 0x56, 0x2c, 0xb8, 0x5a, 0x5a, 0xff, 0x68, 0x86, 0xc9, 0xdf, 0xab, 0xc2,
	0x75, 0xa5, 0x93, 0xe7, 0x30, 0x60, 0x82, 0xca, 0x15, 0xd7, 0xf1, 0x5c, 0xdf, 0x69, 0x0d, 0x72,
	0x08, 0x70, 0x47, 0x97, 0xd2, 0xa6, 0x0b, 0xc5, 0xb8, 0x7f, 0x2d, 0x41, 0x12, 0x7a, 0xe5, 0x4a,
	0x31, 0x4e, 0x4e, 0x60, 0x47, 0x0a, 0x63, 0x79, 0x99, 0x52, 0xc6, 0x34, 0x37, 0xc6, 0x3f, 0x92,
	0x30, 0x19, 0x56, 0xea, 0x79, 0x25, 0xc6, 0x3f, 0x5a, 0x10, 0xae, 0xd2, 0x74, 0xce, 0x53, 0x14,
	0xe9, 0x52, 0xcb, 0xc6, 0x79, 0x8a, 0xe2, 0x46, 0x4b, 0x12, 0xc3, 0xd0, 0x15, 0x50, 0x69, 0x9b,
	0x16, 0x1a, 0xf3, 0xda, 0xfb, 0x3e, 0x45, 0x31, 0x55, 0xda, 0x7e, 0xd2, 0x98, 0x3f, 0x62, 0x66,
	0xd6, 0x56, 0x0e, 0xac, 0x99, 0xcf, 0xd6, 0x22, 0x79, 0x06, 0x7d, 0x7f, 0x80, 0xe1, 0xa9, 0x95,
	0xc6, 0xb7, 0x1f, 0x24, 0xa1, 0x3b, 0xc4, 0xf0, 0x6b, 0x69, 0x9a, 0x3d, 0x72, 0xa5, 0x8d, 0xbf,
	0xb7, 0x6f, 0xbc, 0xda, 0x63, 0xa2, 0xb4, 0x71, 0xb7, 0xce, 0xba, 0xfe, 0xa7, 0xf8, 0xe6, 0x77,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x5d, 0xb0, 0x40, 0xc5, 0x24, 0x05, 0x00, 0x00,
}
